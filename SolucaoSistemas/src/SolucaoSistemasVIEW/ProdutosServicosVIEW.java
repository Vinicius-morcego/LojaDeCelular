/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SolucaoSistemasVIEW;

import SolucaoSistemasCTR.EstoqueCTR;
import SolucaoSistemasCTR.ProdutoServicoCTR;
import SolucaoSistemasCTR.UnidadeMedidaCTR;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author Vinicius
 */
public class ProdutosServicosVIEW extends javax.swing.JDialog {

    ProdutoServicoCTR objprodutoCTR = new ProdutoServicoCTR();
    String controlaestoque = "", atualizaCusto = "", vendeZerado = "", tipo = "";
    NumberFormat numero = DecimalFormat.getCurrencyInstance(
            new Locale("pt", "BR"));
    Double custo = 0.0, venda = 0.0, resultado = 0.0;
    Integer margem = 0;
    Date validadeProduto = null;
    ResultSet pegaMaiorCodigoProduto = null;

    /**
     * Creates new form ProdutosServicosVIEW
     */
    public ProdutosServicosVIEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        //  UtilVIEW.ImagemLabel("\\SolucaoSistemas\\src\\Imagem\\cao.gif", lblGif);
        UtilVIEW.ImagemLabel("\\SolucaoSistemas\\src\\Imagem\\semFoto.jpg", lblFoto);
        lblEnderecoFoto.setText(lblFoto.getText());
        this.setTitle("CADASTRO DE PRODUTOS/SERVIÇOS");
        txtMargem.setDocument(new SomenteNumeros(4));
        txtEstMinimo.setText("0");
        txtEstAtual.setText("0");
        UtilVIEW.Icone(this);
        UtilVIEW.FormatarCampo(txtValorCusto, txtVenda);
        rbProduto.setSelected(true);
        rbEstoque.setSelected(true);
        rbAtualizarCusto.setSelected(true);
        rbVender.setSelected(true);
        if (PesquisaProdutosVIEW.codigoProduto.equals("")) {

        } else {
            txtCodigo.setText(PesquisaProdutosVIEW.codigoProduto);
            RestauraProduto();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opcoesProdutos = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        rbProduto = new javax.swing.JCheckBox();
        rbServico = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txtCodigoBarras = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbxUnidade = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtReferencia = new javax.swing.JTextField();
        txtLocalizacao = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtCategoria = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtValidade = new javax.swing.JFormattedTextField();
        btnGeraCodigoBarras = new javax.swing.JButton();
        rbEstoque = new javax.swing.JCheckBox();
        rbAtualizarCusto = new javax.swing.JCheckBox();
        rbVender = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtEstMinimo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtEstAtual = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtDataAtualizado = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtValorCusto = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtMargem = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtVenda = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacao = new javax.swing.JTextArea();
        btnSalvar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        lblEnderecoFoto = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        lblFoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(null);

        jLabel1.setText("Código:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 8, 60, 14);

        txtCodigo.setEditable(false);
        jPanel1.add(txtCodigo);
        txtCodigo.setBounds(10, 26, 80, 20);

        opcoesProdutos.add(rbProduto);
        rbProduto.setText("Tabela de Produtos");
        rbProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbProdutoActionPerformed(evt);
            }
        });
        jPanel1.add(rbProduto);
        rbProduto.setBounds(90, 4, 130, 23);

        opcoesProdutos.add(rbServico);
        rbServico.setText("Tabela de Serviços");
        rbServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbServicoActionPerformed(evt);
            }
        });
        jPanel1.add(rbServico);
        rbServico.setBounds(90, 26, 130, 23);

        jLabel2.setText("Código de Barras:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(220, 8, 110, 14);

        txtCodigoBarras.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigoBarras.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCodigoBarrasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoBarrasFocusLost(evt);
            }
        });
        txtCodigoBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoBarrasKeyPressed(evt);
            }
        });
        jPanel1.add(txtCodigoBarras);
        txtCodigoBarras.setBounds(220, 26, 160, 20);

        jLabel3.setText("Unidade de Medida:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(420, 8, 110, 14);

        cbxUnidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cbxUnidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxUnidadeFocusGained(evt);
            }
        });
        jPanel1.add(cbxUnidade);
        cbxUnidade.setBounds(420, 26, 50, 20);

        jLabel4.setText("Descrição do Produto/Serviço:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 50, 170, 14);

        txtDescricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescricaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescricaoFocusLost(evt);
            }
        });
        txtDescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescricaoKeyPressed(evt);
            }
        });
        jPanel1.add(txtDescricao);
        txtDescricao.setBounds(10, 70, 400, 20);

        jLabel5.setText("Localização Física do Produto:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(230, 100, 150, 14);

        jLabel6.setText("Referência do Produto:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 100, 170, 14);

        txtReferencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtReferenciaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReferenciaFocusLost(evt);
            }
        });
        txtReferencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtReferenciaKeyPressed(evt);
            }
        });
        jPanel1.add(txtReferencia);
        txtReferencia.setBounds(10, 120, 210, 20);

        txtLocalizacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLocalizacaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLocalizacaoFocusLost(evt);
            }
        });
        jPanel1.add(txtLocalizacao);
        txtLocalizacao.setBounds(230, 120, 280, 20);

        jLabel7.setText("Marcas:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 150, 70, 14);

        jLabel8.setText("Grupo/Categoria:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(230, 150, 110, 14);

        txtMarca.setEditable(false);
        jPanel1.add(txtMarca);
        txtMarca.setBounds(10, 170, 180, 20);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/lupa_16x16.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(414, 160, 30, 30);

        txtCategoria.setEditable(false);
        jPanel1.add(txtCategoria);
        txtCategoria.setBounds(230, 170, 180, 20);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/lupa_16x16.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(194, 160, 30, 30);

        jButton6.setText("jButton6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(480, 24, 30, 23);

        jLabel16.setText("Data de Validade:");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(420, 50, 100, 14);

        try {
            txtValidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtValidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValidadeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtValidadeFocusLost(evt);
            }
        });
        txtValidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValidadeKeyPressed(evt);
            }
        });
        jPanel1.add(txtValidade);
        txtValidade.setBounds(420, 70, 90, 20);

        btnGeraCodigoBarras.setText("jButton3");
        btnGeraCodigoBarras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGeraCodigoBarrasMouseEntered(evt);
            }
        });
        btnGeraCodigoBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeraCodigoBarrasActionPerformed(evt);
            }
        });
        jPanel1.add(btnGeraCodigoBarras);
        btnGeraCodigoBarras.setBounds(386, 24, 30, 23);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(170, 4, 520, 200);

        rbEstoque.setText("Controlar o Estoque");
        rbEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEstoqueActionPerformed(evt);
            }
        });
        getContentPane().add(rbEstoque);
        rbEstoque.setBounds(170, 215, 130, 23);

        rbAtualizarCusto.setText("Atualizar Custo nas Compras");
        rbAtualizarCusto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAtualizarCustoActionPerformed(evt);
            }
        });
        getContentPane().add(rbAtualizarCusto);
        rbAtualizarCusto.setBounds(300, 215, 170, 23);

        rbVender.setText("Vender com o Estoque Zerado");
        rbVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbVenderActionPerformed(evt);
            }
        });
        getContentPane().add(rbVender);
        rbVender.setBounds(470, 215, 180, 23);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(null);

        jLabel9.setText("Estoque Mínimo:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(10, 16, 90, 14);

        txtEstMinimo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtEstMinimo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEstMinimoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEstMinimoFocusLost(evt);
            }
        });
        txtEstMinimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstMinimoKeyPressed(evt);
            }
        });
        jPanel2.add(txtEstMinimo);
        txtEstMinimo.setBounds(106, 13, 98, 20);

        jLabel10.setText("Estoque Atual:");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(10, 46, 80, 14);

        txtEstAtual.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtEstAtual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEstAtualFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEstAtualFocusLost(evt);
            }
        });
        txtEstAtual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstAtualKeyPressed(evt);
            }
        });
        jPanel2.add(txtEstAtual);
        txtEstAtual.setBounds(106, 40, 98, 20);

        jLabel11.setText("Data Atualizado:");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(10, 74, 90, 14);

        txtDataAtualizado.setEditable(false);
        txtDataAtualizado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(txtDataAtualizado);
        txtDataAtualizado.setBounds(106, 68, 98, 20);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(170, 250, 220, 100);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel3.setLayout(null);

        jLabel12.setText("Valor Custo:");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(10, 16, 70, 14);

        txtValorCusto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValorCusto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorCustoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtValorCustoFocusLost(evt);
            }
        });
        txtValorCusto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorCustoKeyPressed(evt);
            }
        });
        jPanel3.add(txtValorCusto);
        txtValorCusto.setBounds(100, 13, 90, 20);

        jLabel13.setText("(%) Margem:");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(10, 40, 70, 14);

        txtMargem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMargem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMargemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMargemFocusLost(evt);
            }
        });
        txtMargem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMargemKeyPressed(evt);
            }
        });
        jPanel3.add(txtMargem);
        txtMargem.setBounds(100, 40, 90, 20);

        jLabel14.setText("Produto/Serviço:");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(10, 70, 90, 14);

        txtVenda.setForeground(new java.awt.Color(51, 51, 255));
        txtVenda.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtVendaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVendaFocusLost(evt);
            }
        });
        txtVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVendaKeyPressed(evt);
            }
        });
        jPanel3.add(txtVenda);
        txtVenda.setBounds(100, 68, 90, 20);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(400, 250, 220, 100);

        jLabel15.setText("Observações Gerais:");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(170, 360, 130, 14);

        txtObservacao.setColumns(20);
        txtObservacao.setLineWrap(true);
        txtObservacao.setRows(5);
        txtObservacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtObservacaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtObservacaoFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(txtObservacao);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(170, 380, 500, 96);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/disquete_16x16.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar);
        btnSalvar.setBounds(486, 485, 90, 30);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Fechar_16x16.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(580, 485, 90, 30);

        lblEnderecoFoto.setEditable(false);
        getContentPane().add(lblEnderecoFoto);
        lblEnderecoFoto.setBounds(4, 170, 130, 20);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/lupa_16x16.png"))); // NOI18N
        getContentPane().add(jButton2);
        jButton2.setBounds(138, 164, 30, 30);

        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFoto.setText("FOTO");
        lblFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFotoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblFotoMouseEntered(evt);
            }
        });
        getContentPane().add(lblFoto);
        lblFoto.setBounds(4, 4, 160, 150);

        setBounds(0, 0, 712, 560);
    }// </editor-fold>//GEN-END:initComponents

    private void rbProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbProdutoActionPerformed
        txtCodigoBarras.requestFocusInWindow();
    }//GEN-LAST:event_rbProdutoActionPerformed

    private void rbServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbServicoActionPerformed
        txtCodigoBarras.requestFocusInWindow();
    }//GEN-LAST:event_rbServicoActionPerformed
    public static boolean unidade = false;
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        unidade = true;
        marca = false;
        categoria = false;
        new VacinasAnimal(null, true).setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void cbxUnidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxUnidadeFocusGained
        ConsultarUnidadeMedida();
    }//GEN-LAST:event_cbxUnidadeFocusGained

    private void txtCodigoBarrasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBarrasKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtDescricao.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtCodigoBarrasKeyPressed

    private void txtDescricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescricaoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtValidade.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtDescricaoKeyPressed

    private void txtReferenciaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReferenciaKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtLocalizacao.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtReferenciaKeyPressed

    private void txtEstMinimoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstMinimoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (txtEstMinimo.getText().equals("")) {
                txtEstMinimo.setText("0");
            }

            txtEstAtual.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtEstMinimoKeyPressed

    private void txtEstAtualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstAtualKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (txtEstAtual.getText().equals("")) {
                txtEstAtual.setText("0");
            }
            txtValorCusto.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtEstAtualKeyPressed

    private void txtValorCustoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorCustoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                custo = 0.0;
                if (txtValorCusto.getText().equals("")) {
                    txtValorCusto.setText(numero.format(custo));
                } else {

                    custo = Double.parseDouble(txtValorCusto.getText().replace("R$", "").replace(",", "."));
                    txtValorCusto.setText(numero.format(custo));
                }

                custo = 0.0;
                txtMargem.requestFocusInWindow();
            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_txtValorCustoKeyPressed

    private void txtMargemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMargemKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {

                if (txtMargem.getText().equals("")) {
                    txtVenda.setText("");
                } else {
                    custo = Double.parseDouble(txtValorCusto.getText().
                            replace("R$", "").replace(".", "").replace(",", "."));
                    venda = Double.parseDouble(txtVenda.getText().
                            replace("R$", "").replace(".", "").replace(",", "."));
                    margem = Integer.parseInt(txtMargem.getText());
                    resultado = ((custo * margem) / 100);
                    txtVenda.setText(numero.format(resultado + custo));
                }

                txtVenda.requestFocusInWindow();
                custo = 0.0;
                margem = 0;
                resultado = 0.0;
                venda = 0.0;
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_txtMargemKeyPressed

    private void txtVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVendaKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                venda = 0.0;
                if (txtVenda.getText().equals("")) {
                    txtVenda.setText(numero.format(venda));
                } else {

                    venda = Double.parseDouble(txtVenda.getText().replace("R$", "").replace(",", "."));
                    txtVenda.setText(numero.format(venda));
                }

                venda = 0.0;
                txtObservacao.requestFocusInWindow();
            }
        } catch (IllegalArgumentException e) {
            System.out.println(String.valueOf(e.getMessage()));
        }


    }//GEN-LAST:event_txtVendaKeyPressed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        int sair = -1;
        sair = JOptionPane.showConfirmDialog(null, "Deseja sair?", "MENSAGEM",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (sair == 0) {
            PesquisaProdutosVIEW.codigoProduto = "";
            this.dispose();
        } else {

        }
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtCodigoBarrasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoBarrasFocusGained
        try {
            txtCodigoBarras.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtCodigoBarrasFocusGained

    private void txtDescricaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescricaoFocusGained
        try {
            txtDescricao.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDescricaoFocusGained

    private void txtReferenciaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReferenciaFocusGained
        try {
            txtReferencia.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtReferenciaFocusGained

    private void txtLocalizacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLocalizacaoFocusGained
        try {
            txtLocalizacao.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtLocalizacaoFocusGained
    public static boolean categoria = false;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        categoria = true;
        marca = false;
        unidade = false;
        new PesquisaDiversosVIEW(null, true).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rbEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEstoqueActionPerformed
        if (rbEstoque.isSelected() == true) {
            rbVender.setEnabled(true);
            txtEstMinimo.setEditable(true);
            // txtEstAtual.setEditable(true);
            txtEstMinimo.requestFocusInWindow();
        } else if (rbEstoque.isSelected() == false) {
            rbVender.setEnabled(false);
            txtEstMinimo.setEditable(false);
            //  txtEstAtual.setEditable(false);
            txtValorCusto.requestFocusInWindow();
        }

    }//GEN-LAST:event_rbEstoqueActionPerformed

    private void rbAtualizarCustoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAtualizarCustoActionPerformed
        txtEstMinimo.requestFocusInWindow();
    }//GEN-LAST:event_rbAtualizarCustoActionPerformed

    private void rbVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbVenderActionPerformed
        txtEstMinimo.requestFocusInWindow();
    }//GEN-LAST:event_rbVenderActionPerformed

    private void txtEstMinimoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEstMinimoFocusGained
        txtEstMinimo.setBackground(new Color(255, 255, 204));
        txtEstMinimo.setText("");
    }//GEN-LAST:event_txtEstMinimoFocusGained

    private void txtEstAtualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEstAtualFocusGained
        txtEstAtual.setBackground(new Color(255, 255, 204));
        txtEstAtual.setText("");
    }//GEN-LAST:event_txtEstAtualFocusGained

    private void txtValorCustoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorCustoFocusGained
        txtValorCusto.setBackground(new Color(255, 255, 204));
        txtValorCusto.setText("");
    }//GEN-LAST:event_txtValorCustoFocusGained

    private void txtMargemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMargemFocusGained
        txtMargem.setBackground(new Color(255, 255, 204));
    }//GEN-LAST:event_txtMargemFocusGained

    private void txtVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVendaFocusGained
        txtVenda.setBackground(new Color(255, 255, 204));
        //txtVenda.setText("");
    }//GEN-LAST:event_txtVendaFocusGained

    private void txtObservacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtObservacaoFocusGained
        txtObservacao.setBackground(new Color(255, 255, 204));
    }//GEN-LAST:event_txtObservacaoFocusGained

    private void txtCodigoBarrasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoBarrasFocusLost
        try {
            txtCodigoBarras.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtCodigoBarrasFocusLost

    private void txtDescricaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescricaoFocusLost
        try {
            txtDescricao.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDescricaoFocusLost

    private void txtReferenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReferenciaFocusLost
        try {
            txtReferencia.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtReferenciaFocusLost

    private void txtLocalizacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLocalizacaoFocusLost
        try {
            txtLocalizacao.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtLocalizacaoFocusLost

    private void txtEstMinimoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEstMinimoFocusLost
        try {
            if (txtEstMinimo.getText().equals("")) {
                txtEstMinimo.setText("0");
            }
            txtEstMinimo.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtEstMinimoFocusLost

    private void txtEstAtualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEstAtualFocusLost
        try {
            if (txtEstAtual.getText().equals("")) {
                txtEstAtual.setText("0");
            }
            txtEstAtual.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtEstAtualFocusLost

    private void txtValorCustoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorCustoFocusLost
        try {
            if (txtValorCusto.getText().equals("")) {
                custo = 0.0;
                txtValorCusto.setText(numero.format(custo));
            }
            txtValorCusto.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValorCustoFocusLost

    private void txtMargemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMargemFocusLost
        try {
            txtMargem.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtMargemFocusLost

    private void txtVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVendaFocusLost
        try {
            if (txtVenda.getText().equals("")) {
                venda = 0.0;
                txtVenda.setText(numero.format(venda));
            }
            txtVenda.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtVendaFocusLost

    private void txtObservacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtObservacaoFocusLost
        try {
            txtObservacao.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtObservacaoFocusLost

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            if (txtDescricao.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Preencher o campo descrição!",
                        "MENSAGEM", JOptionPane.WARNING_MESSAGE);
                txtDescricao.requestFocusInWindow();
            } else if (rbProduto.isSelected() == false && rbServico.isSelected() == false) {
                JOptionPane.showMessageDialog(null, "Selecionar Tabela de Produtos ou Tabela de Serviços!",
                        "MENSAGEM", JOptionPane.WARNING_MESSAGE);
            } else if (txtCodigo.getText().equals("") && txtCodigoBarras.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Gerar o código de barras!",
                        "MENSAGEM", JOptionPane.WARNING_MESSAGE);
            } else {
                if (txtCodigo.getText().equals("")) {
                    CadastrarProduto();

                } else {
                    if (lblEnderecoFoto.getText().equals("")) {

                    } else {
                        AlterarImagemProduto();
                    }
                    AlterarProduto();
                    PesquisaProdutosVIEW.codigoProduto = "";
                }
                this.dispose();
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed
    public static boolean marca = false;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        marca = true;
        unidade = false;
        categoria = false;

        new PesquisaDiversosVIEW(null, true).setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed
    public static boolean fotoProduto = false;
    private void lblFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoMouseClicked
        fotoProduto = true;
        new FotoVIEW(null, true).setVisible(true);
    }//GEN-LAST:event_lblFotoMouseClicked

    private void lblFotoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFotoMouseEntered
        lblFoto.setToolTipText("Clique para ampliar!");
    }//GEN-LAST:event_lblFotoMouseEntered

    private void txtValidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValidadeKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtReferencia.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValidadeKeyPressed

    private void txtValidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValidadeFocusGained
        try {
            txtValidade.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValidadeFocusGained

    private void txtValidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValidadeFocusLost
        try {
            txtValidade.setBackground(Color.white);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValidadeFocusLost

    private void btnGeraCodigoBarrasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGeraCodigoBarrasMouseEntered
        btnGeraCodigoBarras.setToolTipText("Criar Código de Barras");
    }//GEN-LAST:event_btnGeraCodigoBarrasMouseEntered

    private void btnGeraCodigoBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeraCodigoBarrasActionPerformed
        try {
            if (txtCodigo.getText().equals("") && txtCodigoBarras.getText().equals("")) {
                GerarCodigoBarrasVIEW();
            } else {

            }

            txtDescricao.requestFocusInWindow();
        } catch (Exception e) {
            System.out.println("Erro " + e.getMessage());
        }
    }//GEN-LAST:event_btnGeraCodigoBarrasActionPerformed

    private void ConsultarUnidadeMedida() {
        try {
            UnidadeMedidaCTR objunidadeCTR = new UnidadeMedidaCTR();
            ResultSet pesqUnidades = null;
            pesqUnidades = objunidadeCTR.ConsultarUnidadeCTR();
            UtilVIEW.PreencheCombo(pesqUnidades, cbxUnidade, 2);
        } catch (Exception e) {
        }
    }

    private void CadastrarProduto() {
        try {
            EstoqueCTR objestoqueCTR = new EstoqueCTR();
            if (rbEstoque.isSelected() == true) {
                controlaestoque = "X";
            } else if (rbEstoque.isSelected() == false) {
                controlaestoque = "";
            }

            if (rbAtualizarCusto.isSelected() == true) {
                atualizaCusto = "X";
            } else if (rbAtualizarCusto.isSelected() == false) {
                atualizaCusto = "";
            }

            if (rbVender.isSelected() == true) {
                vendeZerado = "X";
            } else if (rbVender.isSelected() == false) {
                vendeZerado = "";
            }
            if (rbProduto.isSelected() == true) {
                tipo = "PRODUTO";
            } else if (rbServico.isSelected() == true) {
                tipo = "SERVICO";
            }

            if (objprodutoCTR.CadastrarProdutoCTR(txtDescricao.getText().toUpperCase(),
                    txtCodigoBarras.getText().toUpperCase(), String.valueOf(cbxUnidade.getSelectedItem()),
                    txtReferencia.getText().toUpperCase(), txtLocalizacao.getText().toUpperCase(),
                    txtMarca.getText(), txtCategoria.getText(), controlaestoque,
                    atualizaCusto, vendeZerado, txtEstMinimo.getText(), txtValorCusto.getText(),
                    txtMargem.getText(), txtVenda.getText(), txtObservacao.getText().toUpperCase(),
                    tipo, lblEnderecoFoto.getText(), txtValidade.getText())) {
                objestoqueCTR.CadastrarEstoqueCTR(txtEstAtual.getText());
                JOptionPane.showMessageDialog(null, "Salvo com sucesso!",
                        "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar!",
                    "MENSAGEM", JOptionPane.WARNING_MESSAGE);

        }
    }

    private void AlterarProduto() {
        try {
            EstoqueCTR objestoqueCTR = new EstoqueCTR();
            if (rbEstoque.isSelected() == true) {
                controlaestoque = "X";
            } else if (rbEstoque.isSelected() == false) {
                controlaestoque = "";
            }

            if (rbAtualizarCusto.isSelected() == true) {
                atualizaCusto = "X";
            } else if (rbAtualizarCusto.isSelected() == false) {
                atualizaCusto = "";
            }

            if (rbVender.isSelected() == true) {
                vendeZerado = "X";
            } else if (rbVender.isSelected() == false) {
                vendeZerado = "";
            }
            if (rbProduto.isSelected() == true) {
                tipo = "PRODUTO";
            } else if (rbServico.isSelected() == true) {
                tipo = "SERVICO";
            }

            if (objprodutoCTR.AlterarProdutoCTR(txtDescricao.getText().toUpperCase(),
                    String.valueOf(cbxUnidade.getSelectedItem()),
                    txtReferencia.getText().toUpperCase(), txtLocalizacao.getText().toUpperCase(),
                    txtMarca.getText(), txtCategoria.getText(), controlaestoque,
                    atualizaCusto, vendeZerado, txtEstMinimo.getText(), txtValorCusto.getText(),
                    txtMargem.getText(), txtVenda.getText(), txtObservacao.getText().toUpperCase(),
                    tipo, txtValidade.getText(), txtCodigo.getText())) {
                objestoqueCTR.AlterarEstoqueCTR(txtEstAtual.getText(), txtCodigo.getText());
                JOptionPane.showMessageDialog(null, "Atualizado com sucesso!",
                        "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar!", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void AlterarImagemProduto() {
        try {
            objprodutoCTR.AlterarImagemProdutoCTR(lblEnderecoFoto.getText(), txtCodigo.getText());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao AlterarImagemProduto ",
                    "MENSAGEM", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void RestauraProduto() {
        try {
            ResultSet rest = null;
            rest = objprodutoCTR.ConsultarProdutoCTR("null", "null", "null", "1", txtCodigo.getText());
            if (rest.next()) {
                txtDescricao.setText(rest.getString("nome"));
                txtCodigoBarras.setText(rest.getString("codigobarras"));
                txtReferencia.setText(rest.getString("referencia"));
                txtLocalizacao.setText(rest.getString("localizacao"));
                txtMarca.setText(rest.getString("marca"));
                txtCategoria.setText(rest.getString("categoria"));
                if (rest.getString("controlaestoque").equals("X")) {
                    rbEstoque.setSelected(true);
                } else if (rest.getString("controlaestoque").equals("")) {
                    rbEstoque.setSelected(false);
                }
                if (rest.getString("atualizarcusto").equals("X")) {
                    rbAtualizarCusto.setSelected(true);
                } else if (rest.getString("atualizarcusto").equals("")) {
                    rbAtualizarCusto.setSelected(false);
                }
                if (rest.getString("venderzerado").equals("X")) {
                    rbVender.setSelected(true);
                } else if (rest.getString("venderzerado").equals("")) {
                    rbVender.setSelected(false);
                }
                txtEstMinimo.setText(rest.getString("estoqueminimo"));
                txtEstAtual.setText(rest.getString("estoqueatual"));
                txtValorCusto.setText(numero.format(rest.getDouble("valorcusto")));
                txtVenda.setText(numero.format(rest.getDouble("valorvenda")));

                cbxUnidade.removeAllItems();
                cbxUnidade.addItem(rest.getString("unidade"));
                if (rest.getString("tipo").equals("PRODUTO")) {
                    rbProduto.setSelected(true);

                } else if (rest.getString("tipo").equals("SERVICO")) {
                    rbServico.setSelected(true);
                }
                txtObservacao.setText(rest.getString("observacao"));
                UtilVIEW.CarregaLabel(lblFoto, rest, "imagem");
            }
        } catch (Exception e) {
            System.out.println("" + e.getMessage());
        }
    }

    private void GerarCodigoBarrasVIEW() {
        try {
            int calcular;
            String ean;
            String checar = "131313131313";
            int soma = 0;
            pegaMaiorCodigoProduto = objprodutoCTR.ConsultarMaiorCodigoProdutoCTR();
            if (pegaMaiorCodigoProduto.next()) {
                ean = pegaMaiorCodigoProduto.getString("chocolate").substring(0, pegaMaiorCodigoProduto.getString("chocolate").length());
                for (int i = 0; i <= ean.length() - 1; i++) {
                    soma += (Integer.parseInt("" + ean.charAt(i))) * (Integer.parseInt("" + checar.charAt(i)));
                }
                calcular = 10 - (soma % 10);
                txtCodigoBarras.setText(pegaMaiorCodigoProduto.getString("chocolate") + calcular);
            } else {
                System.out.println("Erro");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Gerar Codigo de Barras!", "ERRO", JOptionPane.WARNING_MESSAGE);

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProdutosServicosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProdutosServicosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProdutosServicosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProdutosServicosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ProdutosServicosVIEW dialog = new ProdutosServicosVIEW(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGeraCodigoBarras;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbxUnidade;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lblEnderecoFoto;
    public static javax.swing.JLabel lblFoto;
    private javax.swing.ButtonGroup opcoesProdutos;
    private javax.swing.JCheckBox rbAtualizarCusto;
    private javax.swing.JCheckBox rbEstoque;
    private javax.swing.JCheckBox rbProduto;
    private javax.swing.JCheckBox rbServico;
    private javax.swing.JCheckBox rbVender;
    public static javax.swing.JTextField txtCategoria;
    public static javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCodigoBarras;
    private javax.swing.JTextField txtDataAtualizado;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtEstAtual;
    private javax.swing.JTextField txtEstMinimo;
    private javax.swing.JTextField txtLocalizacao;
    public static javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtMargem;
    private javax.swing.JTextArea txtObservacao;
    private javax.swing.JTextField txtReferencia;
    private javax.swing.JFormattedTextField txtValidade;
    private javax.swing.JTextField txtValorCusto;
    private javax.swing.JTextField txtVenda;
    // End of variables declaration//GEN-END:variables
}
