/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SolucaoSistemasVIEW;

import SolucaoSistemasCTR.PessoaCTR;
import SolucaoSistemasCTR.ProdutoServicoCTR;
import static SolucaoSistemasVIEW.PesquisaProdutosVIEW.tblProduto;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinicius
 */
public class CadastroItemVIEW extends javax.swing.JDialog {

    NumberFormat numero = DecimalFormat.getCurrencyInstance(
            new Locale("pt", "BR"));
    Double valorUnitario = 0.0, valorTotal = 0.0, quantia = 0.0, desconto = 0.0,
            resultado = 0.0, resultadoComissao = 0.0, servicoValor = 0.0, produtoValor = 0.0;
    Integer comissao = 0, porcentagem = 0;

    /**
     * Creates new form CadastroItemVIEW
     */
    public CadastroItemVIEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        UtilVIEW.Icone(this);
        this.setTitle("CADASTRO DE ITENS");
        if (AutomaticoVIEW.codigoBarras.equals("")) {
            CadastroItemVIEW.txtCodigoItem.setText(
                    String.valueOf(tblProduto.getValueAt(tblProduto.getSelectedRow(), 0)));
            CadastroItemVIEW.txtUnidadeItem.setText(
                    String.valueOf(tblProduto.getValueAt(tblProduto.getSelectedRow(), 8)));
            CadastroItemVIEW.txtDescricaoItem.setText(
                    String.valueOf(tblProduto.getValueAt(tblProduto.getSelectedRow(), 1)));
            if (PrincipalVIEW.compra == true) {
                UtilVIEW.FormatarCampo(txtValorUnitario);
            } else if (PrincipalVIEW.compra == false) {
                CadastroItemVIEW.txtValorUnitario.setText(
                        String.valueOf(tblProduto.getValueAt(tblProduto.getSelectedRow(), 7)));
            }

        } else if(!AutomaticoVIEW.codigoBarras.equals("")){
            ConsultarProduto();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnPesquisar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCodigoItem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUnidadeItem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDescricaoItem = new javax.swing.JTextField();
        rbImprimir = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtImprimir = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        cbxAtendente = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtPorcentagem = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtValorUnitario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtQuantia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDesconto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDescontoPorc = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtValorTotal = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnCalculadora = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(null);

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Lupa_32x32.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar Produtos");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        jPanel1.add(btnPesquisar);
        btnPesquisar.setBounds(10, 11, 161, 40);

        jLabel1.setText("Código Item:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(237, 19, 73, 14);

        txtCodigoItem.setEditable(false);
        txtCodigoItem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jPanel1.add(txtCodigoItem);
        txtCodigoItem.setBounds(314, 16, 80, 20);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Unidade:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(240, 50, 70, 14);

        txtUnidadeItem.setEditable(false);
        txtUnidadeItem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jPanel1.add(txtUnidadeItem);
        txtUnidadeItem.setBounds(314, 46, 80, 20);

        jLabel3.setText("Descrição do Item Produto / Serviço");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 70, 190, 14);

        txtDescricaoItem.setEditable(false);
        txtDescricaoItem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jPanel1.add(txtDescricaoItem);
        txtDescricaoItem.setBounds(10, 90, 390, 20);

        rbImprimir.setText("Imprimir Observações complementares desse item");
        rbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbImprimirActionPerformed(evt);
            }
        });
        jPanel1.add(rbImprimir);
        rbImprimir.setBounds(10, 114, 280, 23);

        txtImprimir.setColumns(20);
        txtImprimir.setLineWrap(true);
        txtImprimir.setRows(5);
        txtImprimir.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtImprimirFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtImprimirFocusLost(evt);
            }
        });
        txtImprimir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtImprimirKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtImprimir);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 140, 390, 50);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(4, 4, 410, 200);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selecionar / Confirmar Atendente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12), new java.awt.Color(0, 0, 255))); // NOI18N
        jPanel2.setLayout(null);

        cbxAtendente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cbxAtendente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxAtendenteFocusGained(evt);
            }
        });
        cbxAtendente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbxAtendenteKeyPressed(evt);
            }
        });
        jPanel2.add(cbxAtendente);
        cbxAtendente.setBounds(10, 28, 290, 20);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("%");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(316, 28, 20, 20);

        txtPorcentagem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPorcentagem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPorcentagemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPorcentagemFocusLost(evt);
            }
        });
        txtPorcentagem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPorcentagemKeyPressed(evt);
            }
        });
        jPanel2.add(txtPorcentagem);
        txtPorcentagem.setBounds(340, 28, 60, 20);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(4, 210, 410, 60);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("% da Comissão Pré-Definida");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(210, 270, 200, 14);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Valor Unitário:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 310, 80, 14);

        txtValorUnitario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtValorUnitario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValorUnitario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorUnitarioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtValorUnitarioFocusLost(evt);
            }
        });
        txtValorUnitario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorUnitarioKeyPressed(evt);
            }
        });
        getContentPane().add(txtValorUnitario);
        txtValorUnitario.setBounds(110, 310, 160, 20);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Quantia:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 340, 80, 14);

        txtQuantia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtQuantia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQuantia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantiaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantiaFocusLost(evt);
            }
        });
        txtQuantia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQuantiaKeyPressed(evt);
            }
        });
        getContentPane().add(txtQuantia);
        txtQuantia.setBounds(110, 340, 160, 20);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Desconto R$:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 370, 80, 14);

        txtDesconto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtDesconto.setForeground(new java.awt.Color(255, 0, 0));
        txtDesconto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescontoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoFocusLost(evt);
            }
        });
        txtDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescontoKeyPressed(evt);
            }
        });
        getContentPane().add(txtDesconto);
        txtDesconto.setBounds(110, 370, 160, 20);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Desconto %:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 400, 80, 14);

        txtDescontoPorc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtDescontoPorc.setForeground(new java.awt.Color(255, 0, 0));
        txtDescontoPorc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescontoPorc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescontoPorcFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoPorcFocusLost(evt);
            }
        });
        txtDescontoPorc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescontoPorcKeyPressed(evt);
            }
        });
        getContentPane().add(txtDescontoPorc);
        txtDescontoPorc.setBounds(110, 400, 160, 20);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Valor Total:");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(20, 430, 80, 14);

        txtValorTotal.setEditable(false);
        txtValorTotal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtValorTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        getContentPane().add(txtValorTotal);
        txtValorTotal.setBounds(110, 430, 160, 20);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/7881_32x32.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar);
        btnSalvar.setBounds(280, 310, 130, 40);

        btnCalculadora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/calculadora_32x32.png"))); // NOI18N
        btnCalculadora.setText("Calculadora");
        getContentPane().add(btnCalculadora);
        btnCalculadora.setBounds(280, 360, 130, 40);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/casa_32x32.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(280, 410, 130, 40);

        setBounds(0, 0, 436, 504);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        this.dispose();
        new PesquisaProdutosVIEW(null, true).setVisible(true);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void txtImprimirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImprimirKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtPorcentagem.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtImprimirKeyPressed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtPorcentagemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorcentagemKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtValorUnitario.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtPorcentagemKeyPressed

    private void txtValorUnitarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorUnitarioKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
               txtValorUnitario.setText(numero.format(Double.parseDouble(
                       txtValorUnitario.getText().replace("R$", "").replace(".", "").replace(",", "."))));
                txtQuantia.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValorUnitarioKeyPressed

    private void txtQuantiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantiaKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                quantia = Double.parseDouble(txtQuantia.getText().replace(",", "."));
                valorUnitario = Double.parseDouble(txtValorUnitario.getText().replace("R$", "").replace(".", "").
                        replace(",", "."));
                resultado = (quantia * valorUnitario);
                txtValorTotal.setText(numero.format(resultado));
                quantia = 0.0;
                valorUnitario = 0.0;
                resultado = 0.0;
                txtDesconto.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtQuantiaKeyPressed

    private void txtDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescontoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                if (txtDesconto.getText().equals("")) {

                } else {
                    desconto = Double.parseDouble(txtDesconto.getText().replace("R$", "").replace(",", "."));
                    txtDesconto.setText(numero.format(desconto));
                    valorTotal = Double.parseDouble(txtValorTotal.getText().
                            replace("R$", "").replace(".", "").replace(",", "."));
                    resultado = (valorTotal - desconto);
                    txtValorTotal.setText(numero.format(resultado));
                }
                desconto = 0.0;
                resultado = 0.0;
                valorTotal = 0.0;
                txtDescontoPorc.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDescontoKeyPressed

    private void rbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbImprimirActionPerformed
        if (rbImprimir.isSelected() == true) {
            txtImprimir.setEnabled(true);
            txtImprimir.requestFocusInWindow();
        } else if (rbImprimir.isSelected() == false) {
            txtImprimir.setEnabled(false);
            txtImprimir.setText("");
        }
    }//GEN-LAST:event_rbImprimirActionPerformed

    private void txtImprimirFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtImprimirFocusGained
        try {
            txtImprimir.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtImprimirFocusGained

    private void txtValorUnitarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorUnitarioFocusGained
        try {
            if(PrincipalVIEW.compra == true){
                txtValorUnitario.setText("");
            }else if(PrincipalVIEW.compra == false){
                
            }
            
            txtValorUnitario.setBackground(new Color(255, 255, 204));
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValorUnitarioFocusGained

    private void txtPorcentagemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPorcentagemFocusGained
        try {
            txtPorcentagem.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtPorcentagemFocusGained

    private void txtQuantiaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantiaFocusGained
        try {
            txtQuantia.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtQuantiaFocusGained

    private void txtDescontoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoFocusGained
        try {
            txtDesconto.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDescontoFocusGained

    private void txtDescontoPorcFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoPorcFocusGained
        try {
            txtDescontoPorc.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDescontoPorcFocusGained

    private void txtImprimirFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtImprimirFocusLost
        try {
            txtImprimir.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtImprimirFocusLost

    private void txtPorcentagemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPorcentagemFocusLost
        try {
            txtPorcentagem.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtPorcentagemFocusLost

    private void txtValorUnitarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorUnitarioFocusLost
        try {
            txtValorUnitario.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValorUnitarioFocusLost

    private void txtQuantiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantiaFocusLost
        try {
            txtQuantia.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtQuantiaFocusLost

    private void txtDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoFocusLost
        try {
            txtDesconto.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDescontoFocusLost

    private void txtDescontoPorcFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoPorcFocusLost
        try {
            txtDescontoPorc.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDescontoPorcFocusLost

    private void cbxAtendenteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxAtendenteFocusGained
        try {
            ResultSet itemAtendente = null;
            PessoaCTR objpessoaCTR = new PessoaCTR();
            itemAtendente = objpessoaCTR.ConsultarPessoaCTR("0", "", "FUNCIONARIO", "FUNCIONARIO");
            UtilVIEW.PreencheCombo(itemAtendente, cbxAtendente, 2);
            itemAtendente = null;
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbxAtendenteFocusGained

    private void txtDescontoPorcKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescontoPorcKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                porcentagem = Integer.parseInt(txtDescontoPorc.getText());
                valorTotal = Double.parseDouble(txtValorTotal.getText().
                        replace("R$", "").replace(".", "").replace(",", "."));
                resultado = ((valorTotal * porcentagem) / 100);
                txtValorTotal.setText(numero.format(valorTotal - resultado));
                porcentagem = 0;
                valorTotal = 0.0;
                resultado = 0.0;
            }

        } catch (Exception e) {
            System.out.println("Desconto Porcentagem " + e.getMessage());
        }
    }//GEN-LAST:event_txtDescontoPorcKeyPressed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            valorTotal = Double.parseDouble(txtValorTotal.getText().
                    replace("R$", "").replace(".", "").replace(",", "."));
            if (txtPorcentagem.getText().equals("")) {
                resultadoComissao = 0.0;
            } else {
                quantia = Double.parseDouble(txtPorcentagem.getText().replace(",", "."));
                resultadoComissao = (valorTotal * (quantia / 100));
                valorTotal = 0.0;
                quantia = 0.0;
            }

            if (AtendimentoVIEW.incluirProduto == true) {
                AdicionarItens(AtendimentoVIEW.tblItensAtendimento);
                ConsultarTipoProduto();

            } else if (VendaVIEW.incluirItem == true) {
                AdicionarItens(VendaVIEW.tblItensPedido);
                VendaVIEW.quantidade += Double.parseDouble(txtQuantia.getText().replace(",", "."));
                VendaVIEW.txtQuantidade.setText(String.valueOf(VendaVIEW.quantidade));
                VendaVIEW.subtotal += Double.parseDouble(txtValorTotal.getText().
                        replace("R$", "").replace(".", "").replace(",", "."));
                VendaVIEW.txtSubtotal.setText(numero.format(VendaVIEW.subtotal));
                VendaVIEW.txtTotal.setText(numero.format(VendaVIEW.subtotal));
               
            }
            AutomaticoVIEW.codigoBarras = "";
            this.dispose();
        } catch (NumberFormatException e) {
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void cbxAtendenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxAtendenteKeyPressed
        try {
            if(evt.getKeyChar() == KeyEvent.VK_ENTER){
                txtPorcentagem.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbxAtendenteKeyPressed

    private void ConsultarProduto() {
        try {
            ProdutoServicoCTR objprodutoCTR = new ProdutoServicoCTR();
            ResultSet codigoBarra = null;
            codigoBarra = objprodutoCTR.ConsultarProdutoCTR("null", "null",
                    AutomaticoVIEW.codigoBarras.trim(), "1", "0");
            System.out.println(AutomaticoVIEW.codigoBarras);
            if (codigoBarra.next()) {
                txtCodigoItem.setText(codigoBarra.getString("codigo"));
                txtDescricaoItem.setText(codigoBarra.getString("nome"));
                txtUnidadeItem.setText(codigoBarra.getString("unidade"));
                if (PrincipalVIEW.compra == false) {
                    txtValorUnitario.setText(numero.format(codigoBarra.getDouble("valorvenda")));
                } else if (PrincipalVIEW.compra == true) {
                    txtValorUnitario.setText(numero.format(codigoBarra.getDouble("valorcusto")));
                }

            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Consultar o Produto", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
            System.out.println(e.getMessage());
        }
    }

    private void AdicionarItens(JTable tabela) {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tabela.getModel();
            dtm.addRow(new Object[]{false, txtCodigoItem.getText(), txtDescricaoItem.getText(),
                txtValorUnitario.getText(), txtQuantia.getText(), txtValorTotal.getText(),
                String.valueOf(cbxAtendente.getSelectedItem()), numero.format(resultadoComissao)});
            tabela.setModel(dtm);
            resultadoComissao = 0.0;
        } catch (ClassCastException e) {
            System.out.println(String.valueOf(e.getMessage()));
        }
    }

    private void ConsultarTipoProduto() {
        try {
            ProdutoServicoCTR objprodutoCTR = new ProdutoServicoCTR();
            ResultSet tipoProduto = null;
            tipoProduto = objprodutoCTR.ConsultarProdutoCTR("null",
                    "null", "null", "1", txtCodigoItem.getText());
            if (tipoProduto.next()) {
                if (tipoProduto.getString("tipo").equals("PRODUTO")) {
                    produtoValor = Double.parseDouble(txtValorTotal.getText().
                            replace("R$", "").replace(".", "").replace(",", "."));
                    valorUnitario = Double.parseDouble(AtendimentoVIEW.txtValorProduto.getText().
                            replace("R$", "").replace(".", "").replace(",", "."));
                    resultado = (produtoValor + valorUnitario);
                    AtendimentoVIEW.txtValorProduto.setText(numero.format(resultado));
                    produtoValor = 0.0;
                    valorUnitario = 0.0;
                    resultado = 0.0;
                } else if (tipoProduto.getString("tipo").equals("SERVICO")) {
                    servicoValor = Double.parseDouble(txtValorTotal.getText().
                            replace("R$", "").replace(".", "").replace(",", "."));
                    valorUnitario = Double.parseDouble(AtendimentoVIEW.txtValorServico.getText().
                            replace("R$", "").replace(".", "").replace(",", "."));
                    resultado = (servicoValor + valorUnitario);
                    AtendimentoVIEW.txtValorServico.setText(numero.format(resultado));
                    servicoValor = 0.0;
                    valorUnitario = 0.0;
                    resultado = 0.0;
                }
            }
            produtoValor = Double.parseDouble(AtendimentoVIEW.txtValorProduto.getText().
                    replace("R$", "").replace(".", "").replace(",", "."));
            servicoValor = Double.parseDouble(AtendimentoVIEW.txtValorServico.getText().
                    replace("R$", "").replace(".", "").replace(",", "."));
            resultado = (produtoValor + servicoValor);
            AtendimentoVIEW.txtTotal.setText(numero.format(resultado));
            produtoValor = 0.0;
            servicoValor = 0.0;
            resultado = 0.0;

        } catch (SQLException | NumberFormatException e) {
            System.out.println("Erro ao ConsultarTotalAtendimento " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroItemVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroItemVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroItemVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroItemVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                CadastroItemVIEW dialog = new CadastroItemVIEW(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculadora;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbxAtendente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox rbImprimir;
    public static javax.swing.JTextField txtCodigoItem;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtDescontoPorc;
    public static javax.swing.JTextField txtDescricaoItem;
    private javax.swing.JTextArea txtImprimir;
    private javax.swing.JTextField txtPorcentagem;
    private javax.swing.JTextField txtQuantia;
    public static javax.swing.JTextField txtUnidadeItem;
    private javax.swing.JTextField txtValorTotal;
    public static javax.swing.JTextField txtValorUnitario;
    // End of variables declaration//GEN-END:variables
}
