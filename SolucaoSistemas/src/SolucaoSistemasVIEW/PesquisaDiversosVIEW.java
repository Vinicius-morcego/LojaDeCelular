/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SolucaoSistemasVIEW;

import SolucaoSistemasCTR.CategoriaCTR;
import SolucaoSistemasCTR.EspecieCTR;
import SolucaoSistemasCTR.MarcaCTR;
import SolucaoSistemasCTR.PessoaCTR;
import SolucaoSistemasCTR.RacaCTR;
import SolucaoSistemasCTR.VacinasCTR;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinicius
 */
public class PesquisaDiversosVIEW extends javax.swing.JDialog {

    VacinasCTR objvacinasCTR = new VacinasCTR();
    public static String codigoVacina = "";
    ResultSet pesq;

    /**
     * Creates new form PesquisaDiversosVIEW
     *
     * @param parent
     * @param modal
     */
    public PesquisaDiversosVIEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        UtilVIEW.Icone(this);
        this.setTitle("PESQUISAR");
        if (PrincipalVIEW.compra == true || ContasVIEW.fornecedorBoleto == true) {
            btnIncluir.setVisible(false);
            btnAlterar.setVisible(false);
            btnSair.setVisible(false);
            tblPesquisa.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "CÓDIGO", "NOME"
                    }) {
                private static final long serialVersionUID = -2093013531712007495L;

                @Override
                public boolean isCellEditable(int rowIndex, int mColIndex) {
                    return false;
                }
            });
        } else if (PrincipalVIEW.compra == false) {
            if (PrincipalVIEW.cliente == true || AgendamentoVIEW.agendarCliente == true
                    || AtendimentoVIEW.clienteAtendimento == true || VendaVIEW.clientePedido == true
                    || PermissaoVIEW.permissaoFuncionario == true || OrdemServicoVIEW.clienteOS == true) {
                btnIncluir.setVisible(false);
                btnAlterar.setVisible(false);
                btnSair.setVisible(false);
                tblPesquisa.setModel(new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{
                            "", "NOME", "APELIDO"
                        }) {
                    private static final long serialVersionUID = -2093013531712007495L;

                    @Override
                    public boolean isCellEditable(int rowIndex, int mColIndex) {
                        return false;
                    }
                });
            } else if (PrincipalVIEW.cliente == false && AgendamentoVIEW.agendarCliente == false) {
                tblPesquisa.setModel(new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{
                            "", "DESCRIÇÃO", "SITUAÇÃO"
                        }) {
                    private static final long serialVersionUID = -2093013531712007495L;

                    @Override
                    public boolean isCellEditable(int rowIndex, int mColIndex) {
                        return false;
                    }
                });
                if (PrincipalVIEW.especie == true || AtendimentoVIEW.especieAtendimento == true) {
                    ConsultarEspecie();
                } else if (PrincipalVIEW.raca == true || AtendimentoVIEW.racaAtendimento == true) {
                    ConsultarRaca();
                } else if (AnimaisVIEW.incluiVacinas == true || PrincipalVIEW.cliente == true) {
                    ConsultarVacinasVIEW("");
                } else if (ProdutosServicosVIEW.marca == true) {
                    ConsultarMarca();
                } else if (ProdutosServicosVIEW.categoria == true) {
                    ConsultarCategoria();
                }
            }
            tblPesquisa.getColumnModel().getColumn(2).setMinWidth(100);

        }

        tblPesquisa.setDefaultRenderer(Object.class, new ColorRenderer());
        tblPesquisa.getColumnModel().getColumn(1).setMinWidth(200);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPesquisar = new javax.swing.JTextField();
        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPesquisa = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(null);

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });
        getContentPane().add(txtPesquisar);
        txtPesquisar.setBounds(10, 10, 210, 20);

        btnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/7881_32x32.png"))); // NOI18N
        btnIncluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnIncluirMouseEntered(evt);
            }
        });
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnIncluir);
        btnIncluir.setBounds(230, 10, 40, 40);

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Alterar_32x32.png"))); // NOI18N
        btnAlterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAlterarMouseEntered(evt);
            }
        });
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlterar);
        btnAlterar.setBounds(276, 10, 40, 40);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/casa_32x32.png"))); // NOI18N
        btnSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSairMouseEntered(evt);
            }
        });
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(320, 10, 40, 40);

        tblPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPesquisaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPesquisa);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 350, 230);

        setBounds(0, 0, 380, 338);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIncluirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIncluirMouseEntered
        btnIncluir.setToolTipText("Incluir");
    }//GEN-LAST:event_btnIncluirMouseEntered

    private void btnAlterarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlterarMouseEntered
        btnAlterar.setToolTipText("Altualizar");
    }//GEN-LAST:event_btnAlterarMouseEntered

    private void btnSairMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSairMouseEntered
        btnSair.setToolTipText("Sair");
    }//GEN-LAST:event_btnSairMouseEntered

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed

        if (PrincipalVIEW.especie == true || AtendimentoVIEW.especieAtendimento == true) {
            new VacinasAnimal(null, true).setVisible(true);
            ConsultarEspecie();
        } else if (PrincipalVIEW.raca == true || AtendimentoVIEW.racaAtendimento == true) {
            new VacinasAnimal(null, true).setVisible(true);
            ConsultarRaca();
        } else if (ProdutosServicosVIEW.marca == true) {
            new VacinasAnimal(null, true).setVisible(true);
            ConsultarMarca();
        } else if (ProdutosServicosVIEW.categoria == true) {
            new VacinasAnimal(null, true).setVisible(true);
            ConsultarCategoria();
        } else if (AnimaisVIEW.incluiVacinas == true) {
            this.dispose();
            new VacinasAnimal(null, true).setVisible(true);
            // ConsultarVacinasVIEW("");
        }

    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed

        codigoVacina = tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 0).toString();
        new VacinasAnimal(null, true).setVisible(true);
        if (PrincipalVIEW.especie == true) {
            ConsultarEspecie();
        } else if (PrincipalVIEW.raca == true) {
            ConsultarRaca();
        } else if (ProdutosServicosVIEW.marca == true) {
            ConsultarMarca();
        } else if (ProdutosServicosVIEW.categoria == true) {
            ConsultarCategoria();
        }

    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        int perguntaSair = -1;
        perguntaSair = JOptionPane.showConfirmDialog(null, "Deseja sair?", "MENSAGEM",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (perguntaSair == 0) {
            if (PrincipalVIEW.especie == true) {
                PrincipalVIEW.especie = false;
            } else if (PrincipalVIEW.raca == true) {
                PrincipalVIEW.raca = false;
            } else if (PrincipalVIEW.cliente == true) {
                PrincipalVIEW.cliente = false;
            } else if (ProdutosServicosVIEW.marca == true) {
                ProdutosServicosVIEW.marca = false;
            } else if (ProdutosServicosVIEW.categoria == true) {
                ProdutosServicosVIEW.categoria = false;
            } else if (ProdutosServicosVIEW.unidade == true) {
                ProdutosServicosVIEW.unidade = false;
            } else if(OrdemServicoVIEW.clienteOS == true){
                OrdemServicoVIEW.clienteOS = false;
            }

            this.dispose();
        } else if (perguntaSair == 1) {

        }


    }//GEN-LAST:event_btnSairActionPerformed

    private void tblPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPesquisaMouseClicked
        try {
            if (evt.getClickCount() == 2) {

                   if (ProdutosServicosVIEW.marca == true) {
                        ProdutosServicosVIEW.txtMarca.setText(
                                tblPesquisa.getValueAt(
                                        tblPesquisa.getSelectedRow(), 1).toString());
                        ProdutosServicosVIEW.marca = false;
                    } else if (ProdutosServicosVIEW.categoria == true) {
                        ProdutosServicosVIEW.txtCategoria.setText(
                                tblPesquisa.getValueAt(
                                        tblPesquisa.getSelectedRow(), 1).toString());
                        ProdutosServicosVIEW.categoria = false;
                    } else if (VendaVIEW.clientePedido == true) {
                        VendaVIEW.pedidoCliente = String.valueOf(
                                tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 0));
                        VendaVIEW.txtComprador.setText(
                                String.valueOf(tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 1)));
                        VendaVIEW.txtContato.requestFocusInWindow();
                        
                    } else if(PermissaoVIEW.permissaoFuncionario == true){
                        PermissaoVIEW.lblCodFuncionario.setText(String.valueOf(tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 0)));
                        PermissaoVIEW.txtFuncionario.setText(String.valueOf(tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 1)));
                        PermissaoVIEW.permissaoFuncionario = false;
                    } else if(OrdemServicoVIEW.clienteOS == true){
                        OrdemServicoVIEW.codigoCliente = String.valueOf(tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 0));
                        OrdemServicoVIEW.txtCliente.setText(String.valueOf(tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 1)));
                        OrdemServicoVIEW.txtData.requestFocusInWindow();
                        OrdemServicoVIEW.clienteOS = false;
                    } else if(ContasVIEW.fornecedorBoleto == true){
                        ContasVIEW.codigoBoleto = String.valueOf(tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 0));
                        ContasVIEW.txtPessoa.setText(String.valueOf(tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 1)));
                        
                    }
                    this.dispose();
             

            }

        } catch (Exception e) {
        }


    }//GEN-LAST:event_tblPesquisaMouseClicked

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        if (txtPesquisar.getText().equals("")) {
            UtilVIEW.LimparTabela(tblPesquisa);
        } else if (AnimaisVIEW.incluiVacinas == true || PrincipalVIEW.cliente == true
                || AgendamentoVIEW.agendarCliente == true
                || AtendimentoVIEW.clienteAtendimento == true
                || VendaVIEW.clientePedido == true
                || PermissaoVIEW.permissaoFuncionario == true
                || OrdemServicoVIEW.clienteOS == true
                || ContasVIEW.fornecedorBoleto == true) {
            ConsultarVacinasVIEW(txtPesquisar.getText().toUpperCase());
        } else if (PrincipalVIEW.especie == true || AtendimentoVIEW.especieAtendimento == true) {
            ConsultarEspecie();
        } else if (PrincipalVIEW.raca == true
                || AtendimentoVIEW.racaAtendimento == true) {
            ConsultarRaca();
        } else if (ProdutosServicosVIEW.marca == true) {
            ConsultarMarca();
        } else if (ProdutosServicosVIEW.categoria == true) {
            ConsultarCategoria();
        }

    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void ConsultarVacinasVIEW(String parametro) {
        try {
            String tipoPessoa = "";
            if(PermissaoVIEW.permissaoFuncionario == true){
                tipoPessoa = "FUNCIONARIO";
            }else if(PermissaoVIEW.permissaoFuncionario == false){
                tipoPessoa = "CLIENTE";
            }

            if (PrincipalVIEW.compra == true || ContasVIEW.fornecedorBoleto == true) {
                PessoaCTR objpessoaCTR = new PessoaCTR();
                pesq = objpessoaCTR.ConsultarPessoaCTR("0", parametro, "FORNECEDOR", parametro);
            } else if (PrincipalVIEW.compra == false) {
                if (PrincipalVIEW.cliente == true || AgendamentoVIEW.agendarCliente == true
                        || AtendimentoVIEW.clienteAtendimento == true
                        || VendaVIEW.clientePedido == true
                        || PermissaoVIEW.permissaoFuncionario == true
                        || OrdemServicoVIEW.clienteOS == true) {
                    PessoaCTR objpessoaCTR = new PessoaCTR();
                    pesq = objpessoaCTR.ConsultarPessoaCTR("0", parametro, tipoPessoa, parametro);
                } else if (AnimaisVIEW.incluiVacinas == true) {
                    pesq = objvacinasCTR.ConsultarVacinasCTR(parametro);
                }
            }

            RestaurarDiversos(pesq);
            pesq = null;
            tipoPessoa = "";
        } catch (Exception e) {
            System.out.println("" + e.getMessage());
        }
    }

    private void ConsultarEspecie() {
        try {
            EspecieCTR objespecieCTR = new EspecieCTR();

            pesq = objespecieCTR.ConsultarEspecieCTR(txtPesquisar.getText().toUpperCase());
            RestaurarDiversos(pesq);
            pesq = null;
        } catch (Exception e) {
            System.out.println("Erro ao ConsultarEspecie " + e.getMessage());
        }
    }

    private void ConsultarMarca() {
        try {
            MarcaCTR objmarcaCTR = new MarcaCTR();
            pesq = objmarcaCTR.ConsultarMarcaCTR(txtPesquisar.getText().toUpperCase());
            RestaurarDiversos(pesq);
            pesq = null;
        } catch (Exception e) {
        }
    }

    private void ConsultarCategoria() {
        try {
            CategoriaCTR objcategoriaCTR = new CategoriaCTR();
            pesq = objcategoriaCTR.ConsultarCategoriaCTR(txtPesquisar.getText().toUpperCase());
            RestaurarDiversos(pesq);
            pesq = null;
        } catch (Exception e) {
        }
    }

    private void ConsultarRaca() {
        try {
            RacaCTR objracaCTR = new RacaCTR();

            pesq = objracaCTR.ConsultarRacaCTR(txtPesquisar.getText().toUpperCase());
            RestaurarDiversos(pesq);
            pesq = null;
        } catch (Exception e) {
            System.out.println("Erro ao ConsultarRaca " + e.getMessage());
        }
    }

    private void RestaurarDiversos(ResultSet rs) {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblPesquisa.getModel();
            dtm.setRowCount(0);
            if (PrincipalVIEW.compra == true || ContasVIEW.fornecedorBoleto == true) {
                while (rs.next()) {
                    dtm.addRow(new Object[]{rs.getString("codigo"),
                        rs.getString("nome")});
                }
            } else if (PrincipalVIEW.compra == false) {
                if (PrincipalVIEW.cliente == true || AgendamentoVIEW.agendarCliente == true
                        || AtendimentoVIEW.clienteAtendimento == true
                        || VendaVIEW.clientePedido == true
                        || PermissaoVIEW.permissaoFuncionario == true
                        || OrdemServicoVIEW.clienteOS == true) {
                    while (rs.next()) {
                        dtm.addRow(new Object[]{rs.getString("codigo"),
                            rs.getString("nome"), rs.getString("apelido_nomefantasia")});
                    }
                } else if (PrincipalVIEW.cliente == false && AgendamentoVIEW.agendarCliente == false
                        && AtendimentoVIEW.clienteAtendimento == false && VendaVIEW.clientePedido == false) {
                    while (rs.next()) {
                        dtm.addRow(new Object[]{rs.getString("codigo"),
                            rs.getString("descricao"), rs.getString("situacao")});
                    }
                }
            }

            tblPesquisa.setModel(dtm);
        } catch (Exception e) {
            System.out.println("" + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PesquisaDiversosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PesquisaDiversosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PesquisaDiversosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PesquisaDiversosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                PesquisaDiversosVIEW dialog = new PesquisaDiversosVIEW(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnSair;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tblPesquisa;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
