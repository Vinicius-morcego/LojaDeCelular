/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SolucaoSistemasVIEW;

import SolucaoSistemasCTR.AnimalCTR;
import SolucaoSistemasCTR.AtendimentoCTR;
import SolucaoSistemasCTR.ComissaoCTR;
import SolucaoSistemasCTR.ComissaoOrcamentoCTR;
import SolucaoSistemasCTR.ItensOrcamentoCTR;
import SolucaoSistemasCTR.ItensVendaCTR;
import SolucaoSistemasCTR.OrcamentoCTR;
import SolucaoSistemasCTR.PessoaCTR;
import SolucaoSistemasCTR.ProdutoServicoCTR;
import SolucaoSistemasCTR.VendaCTR;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vinicius
 */
public class AtendimentoVIEW extends javax.swing.JDialog {

    AtendimentoCTR objatendimentoCTR = new AtendimentoCTR();
    OrcamentoCTR objorcamentoCTR = new OrcamentoCTR();
    ItensOrcamentoCTR objitensorcamentoCTR = new ItensOrcamentoCTR();
    VendaCTR objvendaCTR = new VendaCTR();
    ItensVendaCTR objitensvendaCTR = new ItensVendaCTR();
    PessoaCTR objpessoaCTR = new PessoaCTR();
    DateFormat objFormata = new SimpleDateFormat("yyyy-MM-dd");
    ResultSet pegaCodigo = null, veterinarioAtende = null, atendente = null;
    public static String atendimentoCliente = "", atendimentoAnimal = "";
    Double valorServico = 0.0, valorProduto = 0.0, totalAtendimento = 0.0, desconto = 0.0,
            resultado = 0.0;
    NumberFormat numeroAtendimento = DecimalFormat.getCurrencyInstance(
            new Locale("pt", "BR"));
    public static Double finalizarAtendimento = 0.0;
    int confirma = -1;
    int percorreComissao = 0;
    Date dataOrcamento = null;

    /**
     * Creates new form AtendimentoVIEW
     */
    public AtendimentoVIEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle(">>> TELA DE ATENDIMENTOS <<<");
        // txtMarcar.setEnabled(false);
        UtilVIEW.mascaraData(txtEntradaAtendimento, txtSaidaAtendimento);
        UtilVIEW.Icone(this);
        UtilVIEW.FormatarCampo(txtValorProduto, txtValorServico, txtValorDesconto, txtTotal);
        tblItensAtendimento.setDefaultRenderer(Object.class, new ColorRenderer());
        try {
            pegaCodigo = objatendimentoCTR.ConsultarMaiorCodigoAtendimentoCTR();
            if (pegaCodigo.next()) {
                // txtCodigoAtendimento.setText(String.valueOf(pegaCodigo.getInt(1) + 1));
                txtCodigoAtendimento.setText(pegaCodigo.getString(1));
            } else {
                txtCodigoAtendimento.setText("00000001");
            }
        } catch (Exception e) {
            txtCodigoAtendimento.setText("00000001");
        }

        if (PesquisarPedidosVIEW.codigoAlpha.equals("")) {

        } else {
            RestaurarOrcamento();
            ConsultarItensOrcamento();
            btnSalvarAtendimento.setEnabled(false);
            incluirProduto = true;
        }
        tblItensAtendimento.getColumnModel().getColumn(0).setMaxWidth(30);
        tblItensAtendimento.getColumnModel().getColumn(2).setMinWidth(300);
        tblItensAtendimento.getColumnModel().getColumn(6).setMinWidth(200);
        tblItensAtendimento.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        if(PrincipalVIEW.compra == true){
            btnSalvarAtendimento.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoAtendimento = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigoAtendimento = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEntradaAtendimento = new javax.swing.JFormattedTextField();
        txtHoraEntrada = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSaidaAtendimento = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtHoraSaida = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtClienteAtendimento = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        cbxVeterinario = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        cbxAtendente = new javax.swing.JComboBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtNomeAnimal = new javax.swing.JTextField();
        btnPesquisarAnimal = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtEspecie = new javax.swing.JTextField();
        btnEspecie = new javax.swing.JButton();
        rbMacho = new javax.swing.JCheckBox();
        rbFemea = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        txtDataNascimento = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        txtRaca = new javax.swing.JTextField();
        btnRaca = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtPesoAtual = new javax.swing.JTextField();
        lblFotoAtendimento = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtCor = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtAcessorios = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtVacinas = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtAlimentacao = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtFobia = new javax.swing.JTextField();
        lblEnderecoFoto = new javax.swing.JLabel();
        btnPesquisaFoto = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        rbProcedimento = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtProcedimento = new javax.swing.JTextArea();
        rbPrescricao = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtPrescricao = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        rbExameClinico = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtExameClinico = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        txtTemperatura = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtFrequenciaCardiaca = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtFrequenciaRespiratoria = new javax.swing.JTextField();
        txtTPC = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtLinfonodos = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtMucosa = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtHidratacao = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtEctoparasitas = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtExamesSolicitados = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblItensAtendimento = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        cbxSituacao = new javax.swing.JComboBox();
        rbMarcar = new javax.swing.JCheckBox();
        btnFormasPagamento = new javax.swing.JButton();
        btnSalvarAtendimento = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        txtValorDesconto = new javax.swing.JTextField();
        txtValorProduto = new javax.swing.JTextField();
        txtValorServico = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtMarcar = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("NÂº ATENDIMENTO");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 10, 110, 14);

        txtCodigoAtendimento.setEditable(false);
        txtCodigoAtendimento.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCodigoAtendimento.setForeground(new java.awt.Color(0, 0, 255));
        txtCodigoAtendimento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel1.add(txtCodigoAtendimento);
        txtCodigoAtendimento.setBounds(10, 30, 100, 40);

        jLabel2.setText("DT ENTRADA");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(130, 10, 70, 14);

        jLabel3.setText("HORA");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(210, 10, 29, 14);

        txtEntradaAtendimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEntradaAtendimentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEntradaAtendimentoFocusLost(evt);
            }
        });
        txtEntradaAtendimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEntradaAtendimentoKeyPressed(evt);
            }
        });
        jPanel1.add(txtEntradaAtendimento);
        txtEntradaAtendimento.setBounds(130, 30, 70, 20);

        try {
            txtHoraEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtHoraEntrada.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHoraEntradaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHoraEntradaFocusLost(evt);
            }
        });
        txtHoraEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHoraEntradaKeyPressed(evt);
            }
        });
        jPanel1.add(txtHoraEntrada);
        txtHoraEntrada.setBounds(210, 30, 50, 20);

        jLabel4.setText("DT SAIDA");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(130, 60, 60, 14);

        txtSaidaAtendimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSaidaAtendimentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSaidaAtendimentoFocusLost(evt);
            }
        });
        txtSaidaAtendimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSaidaAtendimentoKeyPressed(evt);
            }
        });
        jPanel1.add(txtSaidaAtendimento);
        txtSaidaAtendimento.setBounds(130, 80, 70, 20);

        jLabel5.setText("HORA");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(210, 60, 29, 14);

        try {
            txtHoraSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtHoraSaida.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHoraSaidaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHoraSaidaFocusLost(evt);
            }
        });
        jPanel1.add(txtHoraSaida);
        txtHoraSaida.setBounds(210, 80, 50, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 280, 110);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(null);

        jLabel6.setText("Nome do Cliente / Dono do Animal");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(10, 10, 200, 14);

        txtClienteAtendimento.setEditable(false);
        jPanel2.add(txtClienteAtendimento);
        txtClienteAtendimento.setBounds(10, 30, 300, 20);

        jLabel7.setText("Telefone");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(320, 10, 50, 14);

        txtTelefone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefoneFocusLost(evt);
            }
        });
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyPressed(evt);
            }
        });
        jPanel2.add(txtTelefone);
        txtTelefone.setBounds(320, 30, 80, 20);

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        jPanel2.add(btnPesquisar);
        btnPesquisar.setBounds(404, 28, 90, 23);

        jLabel8.setText("VeterinÃ¡rio");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(10, 60, 150, 14);

        cbxVeterinario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cbxVeterinario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxVeterinarioFocusGained(evt);
            }
        });
        cbxVeterinario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbxVeterinarioKeyPressed(evt);
            }
        });
        jPanel2.add(cbxVeterinario);
        cbxVeterinario.setBounds(10, 80, 230, 20);

        jLabel9.setText("Atendente / Ajudante");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(250, 60, 190, 14);

        cbxAtendente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cbxAtendente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxAtendenteFocusGained(evt);
            }
        });
        jPanel2.add(cbxAtendente);
        cbxAtendente.setBounds(250, 80, 230, 20);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(290, 0, 500, 110);

        jPanel3.setLayout(null);

        jLabel10.setText("Nome do Animal");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(10, 11, 90, 14);

        txtNomeAnimal.setEditable(false);
        jPanel3.add(txtNomeAnimal);
        txtNomeAnimal.setBounds(10, 30, 220, 20);

        btnPesquisarAnimal.setText("Pesquisar");
        btnPesquisarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarAnimalActionPerformed(evt);
            }
        });
        jPanel3.add(btnPesquisarAnimal);
        btnPesquisarAnimal.setBounds(240, 30, 30, 23);

        jLabel11.setText("ESPECIE");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(10, 60, 50, 14);

        txtEspecie.setEditable(false);
        jPanel3.add(txtEspecie);
        txtEspecie.setBounds(10, 80, 220, 20);

        btnEspecie.setText("jButton3");
        btnEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEspecieActionPerformed(evt);
            }
        });
        jPanel3.add(btnEspecie);
        btnEspecie.setBounds(240, 80, 30, 23);

        grupoAtendimento.add(rbMacho);
        rbMacho.setText("Macho");
        rbMacho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMachoActionPerformed(evt);
            }
        });
        jPanel3.add(rbMacho);
        rbMacho.setBounds(280, 30, 60, 23);

        grupoAtendimento.add(rbFemea);
        rbFemea.setText("FÃªmea");
        rbFemea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemeaActionPerformed(evt);
            }
        });
        jPanel3.add(rbFemea);
        rbFemea.setBounds(340, 30, 60, 23);

        jLabel12.setText("DT Nascimento");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(400, 11, 90, 14);

        try {
            txtDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataNascimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDataNascimentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataNascimentoFocusLost(evt);
            }
        });
        txtDataNascimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDataNascimentoKeyPressed(evt);
            }
        });
        jPanel3.add(txtDataNascimento);
        txtDataNascimento.setBounds(400, 30, 70, 20);

        jLabel13.setText("RAÃA");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(280, 60, 28, 14);

        txtRaca.setEditable(false);
        jPanel3.add(txtRaca);
        txtRaca.setBounds(280, 80, 220, 20);

        btnRaca.setText("jButton4");
        btnRaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRacaActionPerformed(evt);
            }
        });
        jPanel3.add(btnRaca);
        btnRaca.setBounds(510, 80, 30, 23);

        jLabel14.setText("Peso Atual");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(480, 10, 60, 14);

        txtPesoAtual.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPesoAtual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPesoAtualFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesoAtualFocusLost(evt);
            }
        });
        jPanel3.add(txtPesoAtual);
        txtPesoAtual.setBounds(480, 30, 66, 20);

        lblFotoAtendimento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFotoAtendimento.setText("FOTO");
        jPanel3.add(lblFotoAtendimento);
        lblFotoAtendimento.setBounds(550, 10, 210, 150);

        jLabel16.setText("Cor e caracterÃ­sticas especiais");
        jPanel3.add(jLabel16);
        jLabel16.setBounds(10, 110, 220, 14);

        txtCor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCorFocusLost(evt);
            }
        });
        txtCor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCorKeyPressed(evt);
            }
        });
        jPanel3.add(txtCor);
        txtCor.setBounds(10, 130, 260, 20);

        jLabel17.setText("AcessÃ³rios");
        jPanel3.add(jLabel17);
        jLabel17.setBounds(280, 110, 100, 14);

        txtAcessorios.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAcessoriosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAcessoriosFocusLost(evt);
            }
        });
        txtAcessorios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAcessoriosKeyPressed(evt);
            }
        });
        jPanel3.add(txtAcessorios);
        txtAcessorios.setBounds(280, 130, 260, 20);

        jLabel18.setText("Vacinas");
        jPanel3.add(jLabel18);
        jLabel18.setBounds(10, 160, 50, 14);

        txtVacinas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtVacinasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVacinasFocusLost(evt);
            }
        });
        txtVacinas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVacinasKeyPressed(evt);
            }
        });
        jPanel3.add(txtVacinas);
        txtVacinas.setBounds(50, 160, 490, 20);

        jLabel19.setText("AlimentaÃ§Ã£o - qual raÃ§Ã£o - quantidade - horÃ¡rios ( manhÃ£, tarde, noite ou a vontade )");
        jPanel3.add(jLabel19);
        jLabel19.setBounds(10, 190, 480, 14);

        txtAlimentacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAlimentacaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAlimentacaoFocusLost(evt);
            }
        });
        txtAlimentacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAlimentacaoKeyPressed(evt);
            }
        });
        jPanel3.add(txtAlimentacao);
        txtAlimentacao.setBounds(10, 210, 530, 20);

        jLabel20.setText("Fobias e outras informaÃ§Ãµes");
        jPanel3.add(jLabel20);
        jLabel20.setBounds(10, 240, 160, 14);

        txtFobia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFobiaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFobiaFocusLost(evt);
            }
        });
        jPanel3.add(txtFobia);
        txtFobia.setBounds(10, 260, 530, 20);
        jPanel3.add(lblEnderecoFoto);
        lblEnderecoFoto.setBounds(548, 170, 170, 20);

        btnPesquisaFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/lupa_16x16.png"))); // NOI18N
        btnPesquisaFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaFotoActionPerformed(evt);
            }
        });
        jPanel3.add(btnPesquisaFoto);
        btnPesquisaFoto.setBounds(730, 166, 30, 25);

        jTabbedPane1.addTab("Dados e InformaÃ§Ãµes do Animal ->", jPanel3);

        jPanel4.setLayout(null);

        rbProcedimento.setText("PROCEDIMENTOS:");
        rbProcedimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbProcedimentoActionPerformed(evt);
            }
        });
        jPanel4.add(rbProcedimento);
        rbProcedimento.setBounds(6, 7, 115, 23);

        txtProcedimento.setEditable(false);
        txtProcedimento.setColumns(20);
        txtProcedimento.setLineWrap(true);
        txtProcedimento.setRows(5);
        txtProcedimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProcedimentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProcedimentoFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(txtProcedimento);

        jPanel4.add(jScrollPane2);
        jScrollPane2.setBounds(6, 33, 730, 100);

        rbPrescricao.setText("PRESCRIÃÃO:");
        rbPrescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPrescricaoActionPerformed(evt);
            }
        });
        jPanel4.add(rbPrescricao);
        rbPrescricao.setBounds(6, 140, 130, 23);

        txtPrescricao.setEditable(false);
        txtPrescricao.setColumns(20);
        txtPrescricao.setRows(5);
        txtPrescricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPrescricaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrescricaoFocusLost(evt);
            }
        });
        jScrollPane3.setViewportView(txtPrescricao);

        jPanel4.add(jScrollPane3);
        jScrollPane3.setBounds(6, 170, 730, 100);

        jTabbedPane1.addTab("Procedimentos e PrescriÃ§Ã£o ->", jPanel4);

        jPanel5.setLayout(null);

        rbExameClinico.setText("EXAME CLINICO");
        rbExameClinico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbExameClinicoActionPerformed(evt);
            }
        });
        jPanel5.add(rbExameClinico);
        rbExameClinico.setBounds(6, 7, 118, 23);

        txtExameClinico.setEditable(false);
        txtExameClinico.setColumns(20);
        txtExameClinico.setLineWrap(true);
        txtExameClinico.setRows(5);
        txtExameClinico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtExameClinicoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtExameClinicoFocusLost(evt);
            }
        });
        jScrollPane4.setViewportView(txtExameClinico);

        jPanel5.add(jScrollPane4);
        jScrollPane4.setBounds(6, 33, 730, 100);

        jLabel22.setText("Temp. Animal:");
        jPanel5.add(jLabel22);
        jLabel22.setBounds(10, 144, 70, 10);

        txtTemperatura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTemperaturaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTemperaturaFocusLost(evt);
            }
        });
        txtTemperatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTemperaturaKeyPressed(evt);
            }
        });
        jPanel5.add(txtTemperatura);
        txtTemperatura.setBounds(80, 140, 100, 20);

        jLabel23.setText("FrequÃªncia cardÃ­aca:");
        jPanel5.add(jLabel23);
        jLabel23.setBounds(186, 144, 110, 14);

        txtFrequenciaCardiaca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFrequenciaCardiacaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFrequenciaCardiacaFocusLost(evt);
            }
        });
        txtFrequenciaCardiaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFrequenciaCardiacaKeyPressed(evt);
            }
        });
        jPanel5.add(txtFrequenciaCardiaca);
        txtFrequenciaCardiaca.setBounds(292, 140, 100, 20);

        jLabel24.setText("FrequÃªncia respiral:");
        jPanel5.add(jLabel24);
        jLabel24.setBounds(400, 144, 110, 14);

        jLabel25.setText("TPC:");
        jPanel5.add(jLabel25);
        jLabel25.setBounds(610, 144, 30, 14);

        txtFrequenciaRespiratoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFrequenciaRespiratoriaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFrequenciaRespiratoriaFocusLost(evt);
            }
        });
        txtFrequenciaRespiratoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFrequenciaRespiratoriaKeyPressed(evt);
            }
        });
        jPanel5.add(txtFrequenciaRespiratoria);
        txtFrequenciaRespiratoria.setBounds(500, 140, 100, 20);

        txtTPC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTPCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTPCFocusLost(evt);
            }
        });
        txtTPC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTPCKeyPressed(evt);
            }
        });
        jPanel5.add(txtTPC);
        txtTPC.setBounds(640, 140, 100, 20);

        jLabel26.setText("Linfonodos:");
        jPanel5.add(jLabel26);
        jLabel26.setBounds(10, 174, 60, 14);

        txtLinfonodos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLinfonodosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLinfonodosFocusLost(evt);
            }
        });
        txtLinfonodos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLinfonodosKeyPressed(evt);
            }
        });
        jPanel5.add(txtLinfonodos);
        txtLinfonodos.setBounds(80, 170, 312, 20);

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Mucosa:");
        jPanel5.add(jLabel27);
        jLabel27.setBounds(400, 174, 60, 14);

        txtMucosa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMucosaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMucosaFocusLost(evt);
            }
        });
        txtMucosa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMucosaKeyPressed(evt);
            }
        });
        jPanel5.add(txtMucosa);
        txtMucosa.setBounds(470, 170, 270, 20);

        jLabel28.setText("HidrataÃ§Ã£o:");
        jPanel5.add(jLabel28);
        jLabel28.setBounds(10, 204, 60, 14);

        txtHidratacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHidratacaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHidratacaoFocusLost(evt);
            }
        });
        txtHidratacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHidratacaoKeyPressed(evt);
            }
        });
        jPanel5.add(txtHidratacao);
        txtHidratacao.setBounds(80, 200, 312, 20);

        jLabel29.setText("Ectoparasitas:");
        jPanel5.add(jLabel29);
        jLabel29.setBounds(400, 204, 80, 14);

        txtEctoparasitas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEctoparasitasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEctoparasitasFocusLost(evt);
            }
        });
        txtEctoparasitas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEctoparasitasKeyPressed(evt);
            }
        });
        jPanel5.add(txtEctoparasitas);
        txtEctoparasitas.setBounds(470, 200, 270, 20);

        jLabel30.setText("Exames solicitados:");
        jPanel5.add(jLabel30);
        jLabel30.setBounds(10, 230, 110, 14);

        txtExamesSolicitados.setColumns(20);
        txtExamesSolicitados.setLineWrap(true);
        txtExamesSolicitados.setRows(5);
        txtExamesSolicitados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtExamesSolicitadosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtExamesSolicitadosFocusLost(evt);
            }
        });
        jScrollPane5.setViewportView(txtExamesSolicitados);

        jPanel5.add(jScrollPane5);
        jScrollPane5.setBounds(10, 250, 730, 30);

        jTabbedPane1.addTab("Exame ClÃ­nico e ObservaÃ§Ãµes ->", jPanel5);

        jPanel6.setLayout(null);

        btnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/8390_16x16.png"))); // NOI18N
        btnIncluir.setText("INCLUIR");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });
        jPanel6.add(btnIncluir);
        btnIncluir.setBounds(6, 22, 100, 24);

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/alt_16x16.png"))); // NOI18N
        btnAlterar.setText("ALTERAR");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        jPanel6.add(btnAlterar);
        btnAlterar.setBounds(6, 51, 100, 24);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/8408_16x16.png"))); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jPanel6.add(btnExcluir);
        btnExcluir.setBounds(6, 80, 100, 24);

        tblItensAtendimento.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        tblItensAtendimento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "CÃ³digo:", "Produto:", "Valor:", "Quantidade:", "Subtotal:", "Funcionario:", "ComissÃ£o:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblItensAtendimento.setShowHorizontalLines(false);
        tblItensAtendimento.setShowVerticalLines(false);
        jScrollPane6.setViewportView(tblItensAtendimento);

        jPanel6.add(jScrollPane6);
        jScrollPane6.setBounds(114, 20, 640, 260);

        jTabbedPane1.addTab("Relacionar Produtos e ServiÃ§os", jPanel6);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 120, 770, 320);

        jLabel21.setText("SituaÃ§Ã£o Atual");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(6, 450, 240, 14);

        cbxSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pendente", "Finalizado", "Cancelado" }));
        getContentPane().add(cbxSituacao);
        cbxSituacao.setBounds(6, 470, 220, 20);

        rbMarcar.setText("Marcar se ocorreu problemas no atendimento");
        rbMarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMarcarActionPerformed(evt);
            }
        });
        getContentPane().add(rbMarcar);
        rbMarcar.setBounds(6, 500, 243, 23);

        btnFormasPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/6939_32x32.png"))); // NOI18N
        btnFormasPagamento.setText("FORMAS DE PAGAMENTO");
        btnFormasPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFormasPagamentoActionPerformed(evt);
            }
        });
        getContentPane().add(btnFormasPagamento);
        btnFormasPagamento.setBounds(256, 450, 200, 40);

        btnSalvarAtendimento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/7881_32x32.png"))); // NOI18N
        btnSalvarAtendimento.setText("SALVAR ATENDIMENTO");
        btnSalvarAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAtendimentoActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvarAtendimento);
        btnSalvarAtendimento.setBounds(466, 450, 190, 40);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Imprimir_32x32.png"))); // NOI18N
        btnImprimir.setText("IMPRIMIR");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        getContentPane().add(btnImprimir);
        btnImprimir.setBounds(256, 500, 200, 40);

        btnFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/8416_32x32.png"))); // NOI18N
        btnFinalizar.setText("FINALIZAR");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnFinalizar);
        btnFinalizar.setBounds(466, 500, 190, 40);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/casa_32x32.png"))); // NOI18N
        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(256, 550, 200, 40);

        txtValorDesconto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtValorDesconto.setForeground(new java.awt.Color(255, 51, 0));
        txtValorDesconto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtValorDesconto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Valor do Desconto:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 10))); // NOI18N
        txtValorDesconto.setOpaque(false);
        txtValorDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorDescontoFocusGained(evt);
            }
        });
        txtValorDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorDescontoKeyPressed(evt);
            }
        });
        getContentPane().add(txtValorDesconto);
        txtValorDesconto.setBounds(660, 530, 120, 39);

        txtValorProduto.setEditable(false);
        txtValorProduto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtValorProduto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtValorProduto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Valor Produtos:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 10))); // NOI18N
        txtValorProduto.setOpaque(false);
        txtValorProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorProdutoKeyPressed(evt);
            }
        });
        getContentPane().add(txtValorProduto);
        txtValorProduto.setBounds(660, 450, 120, 39);

        txtValorServico.setEditable(false);
        txtValorServico.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtValorServico.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtValorServico.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Valor ServiÃ§os:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 10))); // NOI18N
        txtValorServico.setOpaque(false);
        txtValorServico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorServicoKeyPressed(evt);
            }
        });
        getContentPane().add(txtValorServico);
        txtValorServico.setBounds(660, 490, 120, 39);

        txtTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(0, 0, 255));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total R$:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        txtTotal.setOpaque(false);
        getContentPane().add(txtTotal);
        txtTotal.setBounds(600, 570, 180, 50);

        txtMarcar.setEditable(false);
        txtMarcar.setColumns(20);
        txtMarcar.setLineWrap(true);
        txtMarcar.setRows(5);
        txtMarcar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMarcarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMarcarFocusLost(evt);
            }
        });
        jScrollPane7.setViewportView(txtMarcar);

        getContentPane().add(jScrollPane7);
        jScrollPane7.setBounds(10, 526, 240, 90);

        setBounds(0, 0, 803, 667);
    }// </editor-fold>//GEN-END:initComponents

    private void txtEntradaAtendimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntradaAtendimentoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtHoraEntrada.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtEntradaAtendimentoKeyPressed

    private void txtHoraEntradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraEntradaKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtSaidaAtendimento.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHoraEntradaKeyPressed

    private void txtSaidaAtendimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaidaAtendimentoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtHoraSaida.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtSaidaAtendimentoKeyPressed

    private void rbMachoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMachoActionPerformed
        txtDataNascimento.requestFocusInWindow();
    }//GEN-LAST:event_rbMachoActionPerformed

    private void rbFemeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemeaActionPerformed
        txtDataNascimento.requestFocusInWindow();
    }//GEN-LAST:event_rbFemeaActionPerformed

    private void txtDataNascimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataNascimentoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtPesoAtual.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDataNascimentoKeyPressed

    private void txtCorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtAcessorios.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtCorKeyPressed

    private void txtAcessoriosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAcessoriosKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtVacinas.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtAcessoriosKeyPressed

    private void txtVacinasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVacinasKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtAlimentacao.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtVacinasKeyPressed

    private void txtAlimentacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAlimentacaoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtFobia.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtAlimentacaoKeyPressed

    private void txtTemperaturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTemperaturaKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtFrequenciaCardiaca.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTemperaturaKeyPressed

    private void txtFrequenciaCardiacaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFrequenciaCardiacaKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtFrequenciaRespiratoria.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtFrequenciaCardiacaKeyPressed

    private void txtFrequenciaRespiratoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFrequenciaRespiratoriaKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtTPC.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtFrequenciaRespiratoriaKeyPressed

    private void txtTPCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTPCKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtLinfonodos.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTPCKeyPressed

    private void txtLinfonodosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLinfonodosKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtMucosa.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtLinfonodosKeyPressed

    private void txtMucosaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMucosaKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtHidratacao.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtMucosaKeyPressed

    private void txtHidratacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHidratacaoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtEctoparasitas.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHidratacaoKeyPressed

    private void txtEctoparasitasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEctoparasitasKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtExamesSolicitados.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtEctoparasitasKeyPressed

    private void txtValorProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorProdutoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtValorServico.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValorProdutoKeyPressed

    private void txtValorServicoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorServicoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtValorDesconto.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValorServicoKeyPressed

    private void txtValorDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorDescontoKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                desconto = 0.0;
                totalAtendimento = 0.0;
                desconto = Double.parseDouble(txtValorDesconto.getText().replace("R$", "").replace(",", "."));
                totalAtendimento = Double.parseDouble(txtTotal.getText().replace("R$", "").replace(",", "."));
                resultado = (totalAtendimento - desconto);
                txtTotal.setText(numeroAtendimento.format(resultado));
                desconto = 0.0;
                totalAtendimento = 0.0;
                resultado = 0.0;
                txtTotal.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValorDescontoKeyPressed
    public static boolean incluirProduto = false;
    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        //new CadastroItemVIEW(null, true).setVisible(true);
        incluirProduto = true;
        new PesquisaProdutosVIEW(null, true).setVisible(true);

    }//GEN-LAST:event_btnIncluirActionPerformed

    private void txtValorDescontoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorDescontoFocusGained
        txtValorDesconto.setText("");
    }//GEN-LAST:event_txtValorDescontoFocusGained
    public static boolean clienteAtendimento = false;
    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        clienteAtendimento = true;
        new PesquisaDiversosVIEW(null, true).setVisible(true);

    }//GEN-LAST:event_btnPesquisarActionPerformed
    public static boolean animalAtendimento = false;
    private void btnPesquisarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarAnimalActionPerformed
        animalAtendimento = true;
        new PesquisaAnimaisVIEW(null, true).setVisible(true);
        ConsultarFotoAnimal();
    }//GEN-LAST:event_btnPesquisarAnimalActionPerformed
    public static boolean especieAtendimento = false;
    private void btnEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEspecieActionPerformed
        especieAtendimento = true;
        new PesquisaDiversosVIEW(null, true).setVisible(true);
    }//GEN-LAST:event_btnEspecieActionPerformed
    public static boolean racaAtendimento = false;
    private void btnRacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRacaActionPerformed
        racaAtendimento = true;
        new PesquisaDiversosVIEW(null, true).setVisible(true);
    }//GEN-LAST:event_btnRacaActionPerformed

    private void btnPesquisaFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaFotoActionPerformed
        UtilVIEW.Imagem(lblFotoAtendimento);
        lblEnderecoFoto.setText(lblFotoAtendimento.getText());
    }//GEN-LAST:event_btnPesquisaFotoActionPerformed

    private void btnSalvarAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAtendimentoActionPerformed
        try {
            if (incluirProduto == false) {
                JOptionPane.showMessageDialog(null, "Relacionar os Produtos e ServiÃ§os!",
                        "MENSAGEM", JOptionPane.WARNING_MESSAGE);
            } else if (incluirProduto == true) {
                confirma = -1;
                confirma = JOptionPane.showConfirmDialog(null, "Os dados estÃ£o corretos?",
                        "MENSAGEM", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (confirma == 0) {
                    CadastrarAtendimentoVIEW();
                    CadastrarOrcamentoVIEW();
                    CadastrarComissaoOrcamento();
                    clienteAtendimento = false;
                    incluirProduto = false;
                    PesquisarPedidosVIEW.codigoAlpha = "";
                    this.dispose();
                    ImprimirOrcamento();
                } else if (confirma == 1) {

                }
                confirma = -1;
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnSalvarAtendimentoActionPerformed

    private void cbxVeterinarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxVeterinarioFocusGained
        try {

            veterinarioAtende = objpessoaCTR.ConsultarPessoaCTR("0", "", "VETERINARIO", "VETERINARIO");
            UtilVIEW.PreencheCombo(veterinarioAtende, cbxVeterinario, 2);
            veterinarioAtende = null;
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbxVeterinarioFocusGained

    private void cbxAtendenteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxAtendenteFocusGained
        try {

            atendente = objpessoaCTR.ConsultarPessoaCTR("0", "", "FUNCIONARIO", "FUNCIONARIO");
            UtilVIEW.PreencheCombo(atendente, cbxAtendente, 2);
            atendente = null;
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbxAtendenteFocusGained

    private void rbMarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMarcarActionPerformed
        if (rbMarcar.isSelected() == true) {
            txtMarcar.setEditable(true);
            txtMarcar.requestFocusInWindow();
        } else if (rbMarcar.isSelected() == false) {
            txtMarcar.setEditable(false);
            txtMarcar.setText("");
        }

    }//GEN-LAST:event_rbMarcarActionPerformed

    private void txtTelefoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefoneFocusGained
        try {
            txtTelefone.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTelefoneFocusGained

    private void txtTelefoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefoneFocusLost
        try {
            txtTelefone.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTelefoneFocusLost

    private void txtDataNascimentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataNascimentoFocusGained
        try {
            txtDataNascimento.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDataNascimentoFocusGained

    private void txtPesoAtualFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesoAtualFocusGained
        try {
            txtPesoAtual.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtPesoAtualFocusGained

    private void txtCorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorFocusGained
        try {
            txtCor.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtCorFocusGained

    private void txtAcessoriosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAcessoriosFocusGained
        try {
            txtAcessorios.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtAcessoriosFocusGained

    private void txtVacinasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVacinasFocusGained
        try {
            txtVacinas.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtVacinasFocusGained

    private void txtAlimentacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAlimentacaoFocusGained
        try {
            txtAlimentacao.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtAlimentacaoFocusGained

    private void txtFobiaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFobiaFocusGained
        try {
            txtFobia.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtFobiaFocusGained

    private void txtProcedimentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProcedimentoFocusGained
        try {
            txtProcedimento.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtProcedimentoFocusGained

    private void txtPrescricaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrescricaoFocusGained
        try {
            txtPrescricao.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtPrescricaoFocusGained

    private void txtExameClinicoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtExameClinicoFocusGained
        try {
            txtExameClinico.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtExameClinicoFocusGained

    private void txtTemperaturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTemperaturaFocusGained
        try {
            txtTemperatura.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTemperaturaFocusGained

    private void txtFrequenciaCardiacaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFrequenciaCardiacaFocusGained
        try {
            txtFrequenciaCardiaca.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtFrequenciaCardiacaFocusGained

    private void txtFrequenciaRespiratoriaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFrequenciaRespiratoriaFocusGained
        try {
            txtFrequenciaRespiratoria.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtFrequenciaRespiratoriaFocusGained

    private void txtTPCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTPCFocusGained
        try {
            txtTPC.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTPCFocusGained

    private void txtLinfonodosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLinfonodosFocusGained
        try {
            txtLinfonodos.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtLinfonodosFocusGained

    private void txtMucosaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMucosaFocusGained
        try {
            txtMucosa.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtMucosaFocusGained

    private void txtHidratacaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHidratacaoFocusGained
        try {
            txtHidratacao.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHidratacaoFocusGained

    private void txtEctoparasitasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEctoparasitasFocusGained
        try {
            txtEctoparasitas.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtEctoparasitasFocusGained

    private void txtExamesSolicitadosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtExamesSolicitadosFocusGained
        try {
            txtExamesSolicitados.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtExamesSolicitadosFocusGained

    private void txtEntradaAtendimentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEntradaAtendimentoFocusGained
        try {
            txtEntradaAtendimento.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtEntradaAtendimentoFocusGained

    private void txtSaidaAtendimentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSaidaAtendimentoFocusGained
        try {
            txtSaidaAtendimento.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtSaidaAtendimentoFocusGained

    private void txtHoraEntradaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHoraEntradaFocusGained
        try {
            txtHoraEntrada.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHoraEntradaFocusGained

    private void txtHoraSaidaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHoraSaidaFocusGained
        try {
            txtHoraSaida.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHoraSaidaFocusGained

    private void txtEntradaAtendimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEntradaAtendimentoFocusLost
        try {
            txtEntradaAtendimento.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtEntradaAtendimentoFocusLost

    private void txtSaidaAtendimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSaidaAtendimentoFocusLost
        try {
            txtSaidaAtendimento.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtSaidaAtendimentoFocusLost

    private void txtHoraEntradaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHoraEntradaFocusLost
        try {
            txtHoraEntrada.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHoraEntradaFocusLost

    private void txtHoraSaidaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHoraSaidaFocusLost
        try {
            txtHoraSaida.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHoraSaidaFocusLost

    private void txtDataNascimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataNascimentoFocusLost
        try {
            txtDataNascimento.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtDataNascimentoFocusLost

    private void txtPesoAtualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesoAtualFocusLost
        try {
            txtPesoAtual.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtPesoAtualFocusLost

    private void txtCorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCorFocusLost
        try {
            txtCor.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtCorFocusLost

    private void txtAcessoriosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAcessoriosFocusLost
        try {
            txtAcessorios.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtAcessoriosFocusLost

    private void txtVacinasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVacinasFocusLost
        try {
            txtVacinas.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtVacinasFocusLost

    private void txtAlimentacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAlimentacaoFocusLost
        try {
            txtAlimentacao.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtAlimentacaoFocusLost

    private void txtFobiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFobiaFocusLost
        try {
            txtFobia.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtFobiaFocusLost

    private void txtProcedimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProcedimentoFocusLost
        try {
            txtProcedimento.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtProcedimentoFocusLost

    private void txtPrescricaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrescricaoFocusLost
        try {
            txtPrescricao.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtPrescricaoFocusLost

    private void txtExameClinicoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtExameClinicoFocusLost
        try {
            txtExameClinico.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtExameClinicoFocusLost

    private void txtTemperaturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTemperaturaFocusLost
        try {
            txtTemperatura.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTemperaturaFocusLost

    private void txtFrequenciaCardiacaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFrequenciaCardiacaFocusLost
        try {
            txtFrequenciaCardiaca.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtFrequenciaCardiacaFocusLost

    private void txtFrequenciaRespiratoriaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFrequenciaRespiratoriaFocusLost
        try {
            txtFrequenciaRespiratoria.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtFrequenciaRespiratoriaFocusLost

    private void txtTPCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTPCFocusLost
        try {
            txtTPC.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTPCFocusLost

    private void txtLinfonodosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLinfonodosFocusLost
        try {
            txtLinfonodos.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtLinfonodosFocusLost

    private void txtMucosaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMucosaFocusLost
        try {
            txtMucosa.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtMucosaFocusLost

    private void txtHidratacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHidratacaoFocusLost
        try {
            txtHidratacao.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHidratacaoFocusLost

    private void txtEctoparasitasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEctoparasitasFocusLost
        try {
            txtEctoparasitas.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtEctoparasitasFocusLost

    private void txtExamesSolicitadosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtExamesSolicitadosFocusLost
        try {
            txtExamesSolicitados.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtExamesSolicitadosFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txtEntradaAtendimento.requestFocusInWindow();
    }//GEN-LAST:event_formWindowOpened

    private void rbProcedimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbProcedimentoActionPerformed
        if (rbProcedimento.isSelected() == true) {
            txtProcedimento.setEditable(true);
            txtProcedimento.requestFocusInWindow();
        } else if (rbProcedimento.isSelected() == false) {
            txtProcedimento.setEditable(false);
            txtProcedimento.setText("");
        }
    }//GEN-LAST:event_rbProcedimentoActionPerformed

    private void rbPrescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPrescricaoActionPerformed
        if (rbPrescricao.isSelected() == true) {
            txtPrescricao.setEditable(true);
            txtPrescricao.requestFocusInWindow();
        } else if (rbPrescricao.isSelected() == false) {
            txtPrescricao.setEditable(false);
            txtPrescricao.setText("");
        }
    }//GEN-LAST:event_rbPrescricaoActionPerformed

    private void rbExameClinicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbExameClinicoActionPerformed
        if (rbExameClinico.isSelected() == true) {
            txtExameClinico.setEditable(true);
            txtExameClinico.requestFocusInWindow();
        } else if (rbExameClinico.isSelected() == false) {
            txtExameClinico.setEditable(false);
            txtExameClinico.setText("");
        }
    }//GEN-LAST:event_rbExameClinicoActionPerformed

    private void txtMarcarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMarcarFocusGained
        try {
            txtMarcar.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtMarcarFocusGained

    private void txtMarcarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMarcarFocusLost
        try {
            txtMarcar.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtMarcarFocusLost

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        try {
            int sair = -1;
            sair = JOptionPane.showConfirmDialog(null, "Deseja sair?", "MENSAGEM",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (sair == 0) {
                incluirProduto = false;
                clienteAtendimento = false;
                PesquisarPedidosVIEW.codigoAlpha = "";
                this.dispose();
            } else if (sair == 1) {

            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_btnSairActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        try {
            ConsultarTipoProduto();
            RemoverItem();
            new CadastroItemVIEW(null, true).setVisible(true);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Selecionar o item!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            ConsultarTipoProduto();
            RemoverItem();

        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Selecionar o item!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        try {
            if (incluirProduto == false) {
                JOptionPane.showMessageDialog(null, "Relacionar os produtos ou serviÃ§os!",
                        "MENSAGEM", JOptionPane.WARNING_MESSAGE);
            } else if (incluirProduto == true) {
                confirma = -1;
                confirma = JOptionPane.showConfirmDialog(null, "Os dados estÃ£o corretos?",
                        "MENSAGEM", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (confirma == 0) {
                    CadastrarAtendimentoVIEW();
                    CadastrarVendaVIEW();
                    CadastrarComissao();
                    finalizarAtendimento = Double.parseDouble(txtTotal.getText().
                            replace("R$", "").replace(".", "").replace(",", "."));
                    AtendimentoVIEW.incluirProduto = false;
                    if (PesquisarPedidosVIEW.codigoAlpha.equals("")) {

                    } else {
                        AtualizarOrcamento();
                        PesquisarPedidosVIEW.codigoAlpha = "";
                    }
                    this.dispose();
                    new FinalizarAtendimentoVIEW(null, true).setVisible(true);

                } else if (confirma == 1) {

                }
            }

        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar!", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void btnFormasPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFormasPagamentoActionPerformed
        try {
            if (incluirProduto == false) {
                JOptionPane.showMessageDialog(null, "Relacionar os Produtos e ServiÃ§os!",
                        "MENSAGEM", JOptionPane.WARNING_MESSAGE);
            } else if (incluirProduto == true) {
                confirma = -1;
                confirma = JOptionPane.showConfirmDialog(null, "Os dados estÃ£o corretos?",
                        "MENSAGEM", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (confirma == 0) {
                    CadastrarAtendimentoVIEW();
                    CadastrarVendaVIEW();
                    CadastrarComissao();
                    finalizarAtendimento = Double.parseDouble(txtTotal.getText().
                            replace("R$", "").replace(".", "").replace(",", "."));
                    AtendimentoVIEW.incluirProduto = false;
                    if (PesquisarPedidosVIEW.codigoAlpha.equals("")) {

                    } else {
                        AtualizarOrcamento();
                        PesquisarPedidosVIEW.codigoAlpha = "";
                    }
                    this.dispose();
                    new FinalizarAtendimentoVIEW(null, true).setVisible(true);

                } else if (confirma == 1) {

                }
            }

        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar!", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnFormasPagamentoActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        try {
            confirma = -1;
            confirma = JOptionPane.showConfirmDialog(null, "Os dados estÃ£o corretos?",
                    "MENSAGEM", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (confirma == 0) {
                CadastrarAtendimentoVIEW();
                CadastrarOrcamentoVIEW();
                CadastrarComissaoOrcamento();
                incluirProduto = false;
                clienteAtendimento = false;
                PesquisarPedidosVIEW.codigoAlpha = "";
                this.dispose();
                ImprimirOrcamento();
            } else if (confirma == 1) {

            }
            confirma = -1;

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void txtTelefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            cbxVeterinario.requestFocusInWindow();
        }

    }//GEN-LAST:event_txtTelefoneKeyPressed

    private void cbxVeterinarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxVeterinarioKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            cbxAtendente.requestFocusInWindow();
        }
    }//GEN-LAST:event_cbxVeterinarioKeyPressed

    private void AtualizarOrcamento() {
        try {
            objorcamentoCTR.CancelarOrcamentoCTR("Finalizado", PesquisarPedidosVIEW.codigoAlpha);
        } catch (Exception e) {
        }
    }

    private void CadastrarAtendimentoVIEW() {
        try {
            Date entrada, saida;
            entrada = new SimpleDateFormat("dd/MM/yyyy").parse(txtEntradaAtendimento.getText());
            saida = new SimpleDateFormat("dd/MM/yyyy").parse(txtSaidaAtendimento.getText());
            if (objatendimentoCTR.CadastrarAtendimentoCTR(new SimpleDateFormat("yyyy-MM-dd").format(entrada),
                    txtHoraEntrada.getText(), new SimpleDateFormat("yyyy-MM-dd").format(saida),
                    txtHoraSaida.getText(), atendimentoCliente, txtTelefone.getText(),
                    String.valueOf(cbxVeterinario.getSelectedItem()), String.valueOf(cbxAtendente.getSelectedItem()),
                    atendimentoAnimal, txtCor.getText().toUpperCase(), txtAcessorios.getText().toUpperCase(),
                    txtVacinas.getText().toUpperCase(), txtAlimentacao.getText().toUpperCase(),
                    txtFobia.getText().toUpperCase(), txtProcedimento.getText().toUpperCase(),
                    txtPrescricao.getText().toUpperCase(), txtExameClinico.getText().toUpperCase(),
                    txtTemperatura.getText().toUpperCase(), txtFrequenciaCardiaca.getText().toUpperCase(),
                    txtFrequenciaRespiratoria.getText().toUpperCase(), txtTPC.getText().toUpperCase(),
                    txtLinfonodos.getText().toUpperCase(), txtMucosa.getText().toUpperCase(),
                    txtHidratacao.getText().toUpperCase(), txtEctoparasitas.getText().toUpperCase(),
                    txtExamesSolicitados.getText().toUpperCase(), String.valueOf(cbxSituacao.getSelectedItem()),
                    txtMarcar.getText().toUpperCase(), txtValorDesconto.getText(),
                    txtTotal.getText())) {
                JOptionPane.showMessageDialog(null, "Salvo com sucesso!", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);

            }
        } catch (ParseException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    private void CadastrarOrcamentoVIEW() {
        try {

            dataOrcamento = new SimpleDateFormat("dd/MM/yyyy").parse(txtEntradaAtendimento.getText());
            if (objorcamentoCTR.CadastrarOrcamentoCTR(atendimentoCliente, atendimentoAnimal,
                    txtValorDesconto.getText(), txtTotal.getText(), String.valueOf(cbxAtendente.getSelectedItem()),
                    String.valueOf(cbxVeterinario.getSelectedItem()), String.valueOf(cbxSituacao.getSelectedItem()),
                    txtCodigoAtendimento.getText(), new SimpleDateFormat("yyyy-MM-dd").format(dataOrcamento),
                    txtHoraEntrada.getText(), "", new SimpleDateFormat("yyyy-MM-dd").format(dataOrcamento),
                    txtHoraEntrada.getText())) {
                int i = 0;
                while (i < tblItensAtendimento.getRowCount()) {
                    objitensorcamentoCTR.CadastrarItensOrcamentoCTR(String.valueOf(tblItensAtendimento.getValueAt(i, 1)),
                            String.valueOf(tblItensAtendimento.getValueAt(i, 4)),
                            String.valueOf(tblItensAtendimento.getValueAt(i, 3)),
                            String.valueOf(tblItensAtendimento.getValueAt(i, 5)));
                    i++;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvarOrcamento!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    private void CadastrarVendaVIEW() {
        try {
            dataOrcamento = new SimpleDateFormat("dd/MM/yyyy").parse(txtEntradaAtendimento.getText());
            if (objvendaCTR.CadastrarVendaCTR(atendimentoCliente, atendimentoAnimal,
                    txtValorDesconto.getText(), txtTotal.getText(),
                    String.valueOf(cbxAtendente.getSelectedItem()),
                    String.valueOf(cbxVeterinario.getSelectedItem()),
                    String.valueOf(cbxSituacao.getSelectedItem()),
                    txtCodigoAtendimento.getText(), new SimpleDateFormat("yyyy-MM-dd").format(dataOrcamento),
                    "", new SimpleDateFormat("yyyy-MM-dd").format(dataOrcamento), "", "")) {
                int i = 0;
                while (i < tblItensAtendimento.getRowCount()) {
                    objitensvendaCTR.CadastrarItensVendaCTR(
                            String.valueOf(tblItensAtendimento.getValueAt(i, 1)),
                            String.valueOf(tblItensAtendimento.getValueAt(i, 4)),
                            String.valueOf(tblItensAtendimento.getValueAt(i, 3)),
                            String.valueOf(tblItensAtendimento.getValueAt(i, 5)));
                    i++;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar Venda!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);

        }
    }

    private void CadastrarComissaoOrcamento() {
        try {
            ComissaoOrcamentoCTR objcomissaoOrcamento = new ComissaoOrcamentoCTR();
            while (percorreComissao < tblItensAtendimento.getRowCount()) {
                objcomissaoOrcamento.CadastrarComissaoOrcamentoCTR(String.valueOf(
                        tblItensAtendimento.getValueAt(percorreComissao, 7)),
                        String.valueOf(tblItensAtendimento.getValueAt(percorreComissao, 1)),
                        String.valueOf(tblItensAtendimento.getValueAt(percorreComissao, 4)),
                        String.valueOf(tblItensAtendimento.getValueAt(percorreComissao, 6)));
                percorreComissao++;
            }
        } catch (Exception e) {
            System.out.println("Erro ao CadastrarComissaoOrcamento " + e.getMessage());
        }
    }

    private void CadastrarComissao() {
        try {
            ComissaoCTR objcomissao = new ComissaoCTR();
            while (percorreComissao < tblItensAtendimento.getRowCount()) {
                objcomissao.CadastrarComissaoCTR(String.valueOf(
                        tblItensAtendimento.getValueAt(percorreComissao, 7)),
                        String.valueOf(tblItensAtendimento.getValueAt(percorreComissao, 1)),
                        String.valueOf(tblItensAtendimento.getValueAt(percorreComissao, 4)),
                        String.valueOf(tblItensAtendimento.getValueAt(percorreComissao, 6)));
                percorreComissao++;
            }
        } catch (Exception e) {
            System.out.println("Erro ao CadastrarComissao " + e.getMessage());
        }
    }

    private void RemoverItem() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblItensAtendimento.getModel();
            dtm.removeRow(tblItensAtendimento.getSelectedRow());
            tblItensAtendimento.setModel(dtm);
        } catch (Exception e) {
        }
    }

    private void ConsultarTipoProduto() {
        try {
            ProdutoServicoCTR objprodutoCTR = new ProdutoServicoCTR();
            ResultSet tipoProduto = null;
            tipoProduto = objprodutoCTR.ConsultarProdutoCTR("null",
                    "null", "null", "1", String.valueOf(tblItensAtendimento.getValueAt(
                            tblItensAtendimento.getSelectedRow(), 0)));
            if (tipoProduto.next()) {
                if (tipoProduto.getString("tipo").equals("PRODUTO")) {
                    valorProduto = Double.parseDouble(
                            txtValorProduto.getText().replace("R$", "").replace(".", "").replace(",", "."));
                    totalAtendimento = (valorProduto - Double.parseDouble(
                            String.valueOf(tblItensAtendimento.getValueAt(tblItensAtendimento.getSelectedRow(), 4)).
                            replace("R$", "").replace(".", "").replace(",", ".")));
                    txtValorProduto.setText(numeroAtendimento.format(totalAtendimento));
                    valorProduto = 0.0;
                    totalAtendimento = 0.0;
                } else if (tipoProduto.getString("tipo").equals("SERVICO")) {
                    valorServico = Double.parseDouble(
                            txtValorServico.getText().replace("R$", "").replace(".", "").replace(",", "."));
                    totalAtendimento = (valorServico - Double.parseDouble(
                            String.valueOf(tblItensAtendimento.getValueAt(tblItensAtendimento.getSelectedRow(), 4)).
                            replace("R$", "").replace(".", "").replace(",", ".")));
                    txtValorServico.setText(numeroAtendimento.format(totalAtendimento));
                    valorServico = 0.0;
                    totalAtendimento = 0.0;
                }
            }
            valorProduto = Double.parseDouble(
                    txtValorProduto.getText().replace("R$", "").replace(".", "").replace(",", "."));
            valorServico = Double.parseDouble(
                    txtValorServico.getText().replace("R$", "").replace(".", "").replace(",", "."));
            totalAtendimento = (valorProduto + valorServico);
            txtTotal.setText(numeroAtendimento.format(totalAtendimento));
            valorProduto = 0.0;
            valorServico = 0.0;
            totalAtendimento = 0.0;
        } catch (SQLException | NumberFormatException e) {
            System.out.println("Erro ao ConsultarTotalAtendimento " + e.getMessage());
        }
    }

    private void ConsultarFotoAnimal() {
        try {
            ResultSet fotoAnimal = null;
            AnimalCTR objanimalCTR = new AnimalCTR();
            fotoAnimal = objanimalCTR.ConsultarAnimalCTR("null", "null", "1",
                    atendimentoAnimal);
            if (fotoAnimal.next()) {
                UtilVIEW.CarregaLabel(lblFotoAtendimento, fotoAnimal, "foto");
            }

        } catch (Exception e) {
        }
    }

    private void RestaurarOrcamento() {
        try {
            ResultSet finalizaOrcamento = null;
            Image fotoAnimal = null;
            finalizaOrcamento = objorcamentoCTR.FecharOrcamentoCTR(PesquisarPedidosVIEW.codigoAlpha);
            if (finalizaOrcamento.next()) {
                atendimentoCliente = finalizaOrcamento.getString("cliente");
                atendimentoAnimal = finalizaOrcamento.getString("animal");
                txtClienteAtendimento.setText(finalizaOrcamento.getString("nome"));
                txtTelefone.setText(finalizaOrcamento.getString("telefone"));
                cbxVeterinario.addItem(finalizaOrcamento.getString("veterinario"));
                cbxAtendente.addItem(finalizaOrcamento.getString("funcionario"));
                txtNomeAnimal.setText(finalizaOrcamento.getString("nomeanimal"));
                txtCor.setText(finalizaOrcamento.getString("identificacao"));
                txtAcessorios.setText(finalizaOrcamento.getString("acessorios"));
                if (finalizaOrcamento.getString("sexo").equals("MACHO")) {
                    rbMacho.setSelected(true);
                    rbFemea.setSelected(false);
                } else if (finalizaOrcamento.getString("sexo").equals("FEMEA")) {
                    rbMacho.setSelected(false);
                    rbFemea.setSelected(true);
                }

                txtVacinas.setText(finalizaOrcamento.getString("vacinas"));
                txtAlimentacao.setText(finalizaOrcamento.getString("alimentacao"));
                txtFobia.setText(finalizaOrcamento.getString("fobia"));
                txtProcedimento.setText(finalizaOrcamento.getString("procedimento"));
                txtPrescricao.setText(finalizaOrcamento.getString("prescricao"));
                txtTemperatura.setText(finalizaOrcamento.getString("temperatura"));
                txtFrequenciaCardiaca.setText(finalizaOrcamento.getString("frequencia_cardiaca"));
                txtFrequenciaRespiratoria.setText(finalizaOrcamento.getString("frequencia_respiral"));
                txtTPC.setText(finalizaOrcamento.getString("tpc"));
                txtLinfonodos.setText(finalizaOrcamento.getString("linfonodos"));
                txtHidratacao.setText(finalizaOrcamento.getString("hidratacao"));
                txtEctoparasitas.setText(finalizaOrcamento.getString("ectoparasitas"));
                txtExamesSolicitados.setText(finalizaOrcamento.getString("exames_solicitados"));
                txtMarcar.setText(finalizaOrcamento.getString("problema_atendimento"));
                txtTotal.setText(numeroAtendimento.format(finalizaOrcamento.getDouble("total")));
                fotoAnimal
                        = Toolkit.getDefaultToolkit().createImage(finalizaOrcamento.getBytes("foto"));
                lblFotoAtendimento.setIcon(
                        new ImageIcon(fotoAnimal.getScaledInstance(
                                lblFotoAtendimento.getWidth(),
                                lblFotoAtendimento.getHeight(), Image.SCALE_DEFAULT)));

            }
            ConsultarItensOrcamento();
        } catch (Exception e) {
            System.out.println("Erro ao Finalizar Orcamento " + e.getMessage());
        }

    }

    private void ConsultarItensOrcamento() {
        try {
            ItensOrcamentoCTR objitens = new ItensOrcamentoCTR();
            ComissaoOrcamentoCTR objcomissaoCTR = new ComissaoOrcamentoCTR();
            ResultSet itens = null, comissaoItens = null;
            itens = objitens.ConsultarItensOrcamentoCTR(PesquisarPedidosVIEW.codigoAlpha);
            comissaoItens = objcomissaoCTR.ConsultarComissaoOrcamentoCTR(PesquisarPedidosVIEW.codigoAlpha);
            RestaurarItensOrcamento(itens, comissaoItens);
            itens = null;
        } catch (Exception e) {
        }
    }

    private void RestaurarItensOrcamento(ResultSet rs, ResultSet comissao) {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblItensAtendimento.getModel();
            dtm.setRowCount(0);
            while (rs.next() && comissao.next()) {
                dtm.addRow(new Object[]{false, rs.getString("produto"), rs.getString("nome"),
                    rs.getString("quantidade"), numeroAtendimento.format(rs.getDouble("unitario")),
                    numeroAtendimento.format(rs.getDouble("subtotal")), rs.getString("func"),
                    numeroAtendimento.format(comissao.getDouble("valor"))});
            }
            tblItensAtendimento.setModel(dtm);
        } catch (Exception e) {
        }
    }

    private void ImprimirOrcamento() {
        try {
            UtilVIEW objutil = new UtilVIEW();

            ResultSet imprimi = null;
            imprimi = objorcamentoCTR.ConsultarMaiorCodigoOrcamentoCTR();
            if (imprimi.next()) {
                objutil.ImprimirOrcamento(imprimi.getString(1));
            }
        } catch (Exception e) {
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AtendimentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AtendimentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AtendimentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AtendimentoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                AtendimentoVIEW dialog = new AtendimentoVIEW(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnEspecie;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnFormasPagamento;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnPesquisaFoto;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnPesquisarAnimal;
    private javax.swing.JButton btnRaca;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvarAtendimento;
    private javax.swing.JComboBox cbxAtendente;
    private javax.swing.JComboBox cbxSituacao;
    private javax.swing.JComboBox cbxVeterinario;
    private javax.swing.ButtonGroup grupoAtendimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblEnderecoFoto;
    public static javax.swing.JLabel lblFotoAtendimento;
    private javax.swing.JCheckBox rbExameClinico;
    public static javax.swing.JCheckBox rbFemea;
    public static javax.swing.JCheckBox rbMacho;
    private javax.swing.JCheckBox rbMarcar;
    private javax.swing.JCheckBox rbPrescricao;
    private javax.swing.JCheckBox rbProcedimento;
    public static javax.swing.JTable tblItensAtendimento;
    public static javax.swing.JTextField txtAcessorios;
    private javax.swing.JTextField txtAlimentacao;
    public static javax.swing.JTextField txtClienteAtendimento;
    private javax.swing.JTextField txtCodigoAtendimento;
    public static javax.swing.JTextField txtCor;
    private javax.swing.JFormattedTextField txtDataNascimento;
    private javax.swing.JTextField txtEctoparasitas;
    private javax.swing.JFormattedTextField txtEntradaAtendimento;
    public static javax.swing.JTextField txtEspecie;
    private javax.swing.JTextArea txtExameClinico;
    private javax.swing.JTextArea txtExamesSolicitados;
    private javax.swing.JTextField txtFobia;
    private javax.swing.JTextField txtFrequenciaCardiaca;
    private javax.swing.JTextField txtFrequenciaRespiratoria;
    private javax.swing.JTextField txtHidratacao;
    private javax.swing.JFormattedTextField txtHoraEntrada;
    private javax.swing.JFormattedTextField txtHoraSaida;
    private javax.swing.JTextField txtLinfonodos;
    private javax.swing.JTextArea txtMarcar;
    private javax.swing.JTextField txtMucosa;
    public static javax.swing.JTextField txtNomeAnimal;
    public static javax.swing.JTextField txtPesoAtual;
    private javax.swing.JTextArea txtPrescricao;
    private javax.swing.JTextArea txtProcedimento;
    public static javax.swing.JTextField txtRaca;
    private javax.swing.JFormattedTextField txtSaidaAtendimento;
    private javax.swing.JTextField txtTPC;
    public static javax.swing.JTextField txtTelefone;
    private javax.swing.JTextField txtTemperatura;
    public static javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtVacinas;
    private javax.swing.JTextField txtValorDesconto;
    public static javax.swing.JTextField txtValorProduto;
    public static javax.swing.JTextField txtValorServico;
    // End of variables declaration//GEN-END:variables
}
