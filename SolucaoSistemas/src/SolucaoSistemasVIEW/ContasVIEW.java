/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SolucaoSistemasVIEW;

import SolucaoSistemasCTR.ContasPagarCTR;
import SolucaoSistemasCTR.ContasReceberCTR;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Batman
 */
public class ContasVIEW extends javax.swing.JDialog {

    NumberFormat numero = DecimalFormat.getCurrencyInstance(new Locale("Pt", "BR"));
    public static String codigoBoleto = "";
    int loop = 0, duplicata = 0;
    Date dataVencimento = null;
    PorExtenso objetoExt = new PorExtenso();

    /**
     * Creates new form ContasVIEW
     */
    public ContasVIEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        UtilVIEW.FormatarCampo(txtValorDocumento);
        this.setTitle("Incluir Boleto");
        tblContasVIEW.setDefaultRenderer(Object.class, new ColorRenderer());
        tblContasVIEW.getColumnModel().getColumn(1).setMinWidth(130);
        tblContasVIEW.getColumnModel().getColumn(0).setMaxWidth(30);
        tblContasVIEW.getColumnModel().getColumn(2).setMinWidth(100);
        tblContasVIEW.getColumnModel().getColumn(3).setMinWidth(100);
        tblContasVIEW.getColumnModel().getColumn(4).setMinWidth(400);
        tblContasVIEW.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoParcelas = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNumeroDocumento = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtValorDocumento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNumeroParcela = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        txtVencimento = new com.toedter.calendar.JDateChooser();
        btnGerar = new javax.swing.JButton();
        rbFixarDia = new javax.swing.JRadioButton();
        rbIntervaloDia = new javax.swing.JRadioButton();
        txtQuantidadeDias = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtHistorico = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPessoa = new javax.swing.JTextField();
        btnPesquisa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblContasVIEW = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jLabel1.setText("Número do documento:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(440, 10, 130, 14);

        txtNumeroDocumento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNumeroDocumento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroDocumentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumeroDocumentoFocusLost(evt);
            }
        });
        txtNumeroDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroDocumentoKeyPressed(evt);
            }
        });
        jPanel1.add(txtNumeroDocumento);
        txtNumeroDocumento.setBounds(440, 30, 110, 20);

        jLabel2.setText("Valor documento:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(560, 10, 100, 14);

        txtValorDocumento.setForeground(new java.awt.Color(0, 0, 204));
        txtValorDocumento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValorDocumento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorDocumentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtValorDocumentoFocusLost(evt);
            }
        });
        txtValorDocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorDocumentoKeyPressed(evt);
            }
        });
        jPanel1.add(txtValorDocumento);
        txtValorDocumento.setBounds(560, 30, 110, 20);

        jLabel3.setText("Nº de Parcelas:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(680, 10, 80, 14);

        txtNumeroParcela.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroParcelaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumeroParcelaFocusLost(evt);
            }
        });
        jPanel1.add(txtNumeroParcela);
        txtNumeroParcela.setBounds(680, 30, 80, 20);

        jLabel4.setText("Data do 1º Vencimento:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 60, 120, 14);
        jPanel1.add(txtVencimento);
        txtVencimento.setBounds(10, 80, 110, 20);

        btnGerar.setText("Gerar Parcela");
        btnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGerar);
        btnGerar.setBounds(650, 78, 110, 23);

        grupoParcelas.add(rbFixarDia);
        rbFixarDia.setText("Fixar dia por parcela:");
        rbFixarDia.setOpaque(false);
        rbFixarDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFixarDiaActionPerformed(evt);
            }
        });
        jPanel1.add(rbFixarDia);
        rbFixarDia.setBounds(130, 60, 150, 23);

        grupoParcelas.add(rbIntervaloDia);
        rbIntervaloDia.setText("Intervalo de dias:");
        rbIntervaloDia.setOpaque(false);
        rbIntervaloDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIntervaloDiaActionPerformed(evt);
            }
        });
        jPanel1.add(rbIntervaloDia);
        rbIntervaloDia.setBounds(130, 80, 120, 23);

        txtQuantidadeDias.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQuantidadeDias.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantidadeDiasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantidadeDiasFocusLost(evt);
            }
        });
        txtQuantidadeDias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQuantidadeDiasKeyPressed(evt);
            }
        });
        jPanel1.add(txtQuantidadeDias);
        txtQuantidadeDias.setBounds(250, 80, 36, 20);

        jLabel5.setText("Histórico:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(290, 60, 180, 14);

        txtHistorico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHistoricoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHistoricoFocusLost(evt);
            }
        });
        txtHistorico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHistoricoKeyPressed(evt);
            }
        });
        jPanel1.add(txtHistorico);
        txtHistorico.setBounds(290, 80, 350, 20);

        jLabel6.setText("Nome / Nome Fantasia:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 10, 170, 14);

        txtPessoa.setEditable(false);
        jPanel1.add(txtPessoa);
        txtPessoa.setBounds(10, 30, 380, 20);

        btnPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/lupa_16x16.png"))); // NOI18N
        btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaActionPerformed(evt);
            }
        });
        jPanel1.add(btnPesquisa);
        btnPesquisa.setBounds(400, 20, 30, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 770, 110);

        tblContasVIEW.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Número do Documento", "Valor Documento", "Vencimento", "Histórico"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblContasVIEW.setShowHorizontalLines(false);
        tblContasVIEW.setShowVerticalLines(false);
        jScrollPane1.setViewportView(tblContasVIEW);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 110, 750, 160);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/7881_32x32.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar);
        btnSalvar.setBounds(130, 290, 110, 40);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/sair_32x32.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar);
        btnCancelar.setBounds(10, 290, 110, 40);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/8416_32x32.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(250, 290, 110, 40);

        setBounds(0, 0, 787, 377);
    }// </editor-fold>//GEN-END:initComponents

    private void rbFixarDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFixarDiaActionPerformed
        txtHistorico.requestFocusInWindow();
    }//GEN-LAST:event_rbFixarDiaActionPerformed

    private void rbIntervaloDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIntervaloDiaActionPerformed
        txtQuantidadeDias.requestFocusInWindow();
        txtVencimento.setDate(new Date());
    }//GEN-LAST:event_rbIntervaloDiaActionPerformed

    private void txtNumeroDocumentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroDocumentoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtValorDocumento.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtNumeroDocumentoKeyPressed

    private void txtValorDocumentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorDocumentoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            txtValorDocumento.setText(numero.format(Double.parseDouble(
                    txtValorDocumento.getText().replace("R$", "").replace(".", "").replace(",", "."))));
            txtNumeroParcela.requestFocusInWindow();
        }
    }//GEN-LAST:event_txtValorDocumentoKeyPressed

    private void btnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarActionPerformed

        if (rbFixarDia.isSelected() == false && rbIntervaloDia.isSelected() == false) {
            JOptionPane.showMessageDialog(null, "Selecionar uma opção!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        } else if (Integer.parseInt(String.valueOf(txtNumeroParcela.getValue())) <= 0) {
            JOptionPane.showMessageDialog(null, "Preencher o número de parcelas!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        } else if (txtVencimento.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Preencher o 1º Vencimento!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        } else if (rbIntervaloDia.isSelected() == true && txtQuantidadeDias.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencher a quantidade de dias!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
            txtQuantidadeDias.requestFocusInWindow();
        } else if (txtValorDocumento.getText().equals("R$ 0,00") || txtValorDocumento.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencher o valor do documento!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
            txtValorDocumento.requestFocusInWindow();

        } else {
            InserirContas();
        }


    }//GEN-LAST:event_btnGerarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        clienteBoleto = false;
        fornecedorBoleto = false;
        PesquisarFinanceiroVIEW.txtPesquisar.requestFocusInWindow();
        this.dispose();

    }//GEN-LAST:event_btnSairActionPerformed

    private void txtValorDocumentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorDocumentoFocusGained
        try {
            txtValorDocumento.setText("");
            txtValorDocumento.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }

    }//GEN-LAST:event_txtValorDocumentoFocusGained

    private void txtNumeroDocumentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroDocumentoFocusGained
        try {

            txtNumeroDocumento.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtNumeroDocumentoFocusGained

    private void txtNumeroParcelaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroParcelaFocusGained
        try {

            txtNumeroParcela.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtNumeroParcelaFocusGained

    private void txtQuantidadeDiasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeDiasFocusGained
        try {

            txtQuantidadeDias.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtQuantidadeDiasFocusGained

    private void txtNumeroDocumentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroDocumentoFocusLost
        try {
            txtNumeroDocumento.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtNumeroDocumentoFocusLost

    private void txtValorDocumentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorDocumentoFocusLost
        try {
            txtValorDocumento.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtValorDocumentoFocusLost

    private void txtNumeroParcelaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroParcelaFocusLost
        try {
            txtNumeroParcela.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtNumeroParcelaFocusLost

    private void txtQuantidadeDiasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeDiasFocusLost
        try {
            txtQuantidadeDias.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtQuantidadeDiasFocusLost

    private void txtQuantidadeDiasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadeDiasKeyPressed
        try {
            if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
                txtHistorico.requestFocusInWindow();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtQuantidadeDiasKeyPressed

    private void txtHistoricoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHistoricoFocusLost
        try {
            txtHistorico.setBackground(Color.WHITE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHistoricoFocusLost

    private void txtHistoricoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHistoricoFocusGained
        try {

            txtHistorico.setBackground(new Color(255, 255, 204));
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtHistoricoFocusGained

    private void txtHistoricoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHistoricoKeyPressed

        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            if (rbFixarDia.isSelected() == false && rbIntervaloDia.isSelected() == false) {
                JOptionPane.showMessageDialog(null, "Selecionar uma opção!", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
            } else if (Integer.parseInt(String.valueOf(txtNumeroParcela.getValue())) <= 0) {
                JOptionPane.showMessageDialog(null, "Preencher o número de parcelas!", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
            } else if (txtVencimento.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Preencher o 1º Vencimento!", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
            } else if (rbIntervaloDia.isSelected() == true && txtQuantidadeDias.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Preencher a quantidade de dias!", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
                txtQuantidadeDias.requestFocusInWindow();
            } else if (txtValorDocumento.getText().equals("R$ 0,00") || txtValorDocumento.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Preencher o valor do documento!", "MENSAGEM", JOptionPane.WARNING_MESSAGE);
                txtValorDocumento.requestFocusInWindow();

            } else {
                InserirContas();
            }
        }

    }//GEN-LAST:event_txtHistoricoKeyPressed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int op = -1;
        op = JOptionPane.showConfirmDialog(null, "Deseja realmente cancelar?", "MENSAGEM",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (op == 0) {
            UtilVIEW.LimparTabela(tblContasVIEW);
            UtilVIEW.LimparCampos(jPanel1);
            txtNumeroParcela.setValue(0);
            txtVencimento.setDate(null);
            rbFixarDia.setSelected(false);
            rbIntervaloDia.setSelected(false);

            txtNumeroDocumento.requestFocusInWindow();
        } else if (op == 1) {

        }

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txtNumeroDocumento.requestFocusInWindow();
    }//GEN-LAST:event_formWindowOpened

    public static boolean clienteBoleto = false;
    public static boolean fornecedorBoleto = false;
    private void btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaActionPerformed
        if (PrincipalVIEW.contaspagar == true) {
            fornecedorBoleto = true;
        } else if (PrincipalVIEW.contasreceber == true) {
            clienteBoleto = true;
        }
        new PesquisaDiversosVIEW(null, true).setVisible(true);

    }//GEN-LAST:event_btnPesquisaActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
              if (txtPessoa.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencher o campo nome!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            if (PrincipalVIEW.contaspagar == true) {
                CadastrarContasPagar();
            } else if (PrincipalVIEW.contasreceber == true) {
                CadastrarContasReceber();
            }
            JOptionPane.showMessageDialog(null, "Salvo com sucesso!", "MENSAGEM",
                    JOptionPane.INFORMATION_MESSAGE);
            clienteBoleto = false;
            fornecedorBoleto = false;
            PesquisarFinanceiroVIEW.txtPesquisar.requestFocusInWindow();
            this.dispose();
        }
        } catch (Exception e) {
            System.out.println(""+e.getMessage());
        }
      
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void InserirContas() {
        try {
            int dias = 0;
            Double valorDocumento = 0.0;
            Long numeroDocumento = 0L;
            GregorianCalendar gc = new GregorianCalendar();
            DefaultTableModel dtm = (DefaultTableModel) tblContasVIEW.getModel();
            valorDocumento
                    = (Double.parseDouble(txtValorDocumento.getText().replace("R$", "").replace(".", "").replace(",", "."))
                    / Integer.parseInt(String.valueOf(txtNumeroParcela.getValue())));
            dtm.setRowCount(0);

            if (txtNumeroDocumento.getText().equals("")) {

            } else {
                numeroDocumento = Long.parseLong(txtNumeroDocumento.getText());
            }

            for (int i = 0; i < Integer.parseInt(String.valueOf(txtNumeroParcela.getValue())); i++) {
                gc.setTime(txtVencimento.getDate());
                if (rbFixarDia.isSelected() == true) {

                    gc.add(GregorianCalendar.MONTH, i);

                } else if (rbIntervaloDia.isSelected() == true) {
                    dias += Integer.parseInt(String.valueOf(txtQuantidadeDias.getText()));
                    gc.add(GregorianCalendar.DAY_OF_MONTH, dias);
                }

                dtm.addRow(new Object[]{false, String.valueOf(numeroDocumento + i),
                    numero.format(valorDocumento), new SimpleDateFormat("dd/MM/yyyy").format(gc.getTime()),
                    txtHistorico.getText()});

            }
            tblContasVIEW.setModel(dtm);
            dias = 0;
            valorDocumento = 0.0;
            numeroDocumento = 0L;
        } catch (Exception e) {
            System.out.println("Erro " + e.getMessage());
        }
    }

    private void CadastrarContasReceber() {
        try {
            ContasReceberCTR objReceberCTR = new ContasReceberCTR();
            while (loop < tblContasVIEW.getRowCount()) {
                dataVencimento = null;
                dataVencimento = new SimpleDateFormat("dd/MM/yyyy").parse(
                        String.valueOf(tblContasVIEW.getValueAt(loop, 3)));
                objReceberCTR.CadastrarContasReceberCTR(codigoBoleto, "0",
                        String.valueOf(tblContasVIEW.getValueAt(loop, 1) + ", "
                                + tblContasVIEW.getValueAt(loop, 4)),
                        String.valueOf(tblContasVIEW.getValueAt(loop, 2)),
                        new SimpleDateFormat("yyyy-MM-dd").format(dataVencimento),
                        "EM ABERTO", (++duplicata) + "/" + String.valueOf(txtNumeroParcela.getValue()),
                        objetoExt.write(new BigDecimal(Double.parseDouble(
                                String.valueOf(tblContasVIEW.getValueAt(loop, 2)).
                                replace("R$", "").replace(".", "").replace(",", ".")))),
                        "NOTA");
                loop++;
            }

            dataVencimento = null;
            duplicata = 0;
        } catch (ParseException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Salvar!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    private void CadastrarContasPagar() {
        try {
            ContasPagarCTR objcontasCTR = new ContasPagarCTR();
            while (loop < tblContasVIEW.getRowCount()) {
                dataVencimento = null;
                dataVencimento = new SimpleDateFormat("dd/MM/yyyy").parse(
                        String.valueOf(tblContasVIEW.getValueAt(loop, 3)));
                objcontasCTR.CadastrarContasPagarCTR(codigoBoleto, "0",
                        String.valueOf(tblContasVIEW.getValueAt(loop, 1) + ", "
                                + tblContasVIEW.getValueAt(loop, 4)),
                        String.valueOf(tblContasVIEW.getValueAt(loop, 2)),
                        new SimpleDateFormat("yyyy-MM-dd").format(dataVencimento),
                        "EM ABERTO", (++duplicata) + "/" + String.valueOf(txtNumeroParcela.getValue()),
                        objetoExt.write(new BigDecimal(Double.parseDouble(
                                String.valueOf(tblContasVIEW.getValueAt(loop, 2)).
                                replace("R$", "").replace(".", "").replace(",", ".")))),
                        "CONTAS À PAGAR");
                loop++;
            }

            dataVencimento = null;
            duplicata = 0;
        } catch (ParseException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Salvar!", "MENSAGEM",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContasVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContasVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContasVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContasVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ContasVIEW dialog = new ContasVIEW(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGerar;
    private javax.swing.JButton btnPesquisa;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup grupoParcelas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbFixarDia;
    private javax.swing.JRadioButton rbIntervaloDia;
    private javax.swing.JTable tblContasVIEW;
    private javax.swing.JTextField txtHistorico;
    public static javax.swing.JTextField txtNumeroDocumento;
    private javax.swing.JSpinner txtNumeroParcela;
    public static javax.swing.JTextField txtPessoa;
    private javax.swing.JTextField txtQuantidadeDias;
    private javax.swing.JTextField txtValorDocumento;
    private com.toedter.calendar.JDateChooser txtVencimento;
    // End of variables declaration//GEN-END:variables
}
