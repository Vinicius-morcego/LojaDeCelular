/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SolucaoSistemasVIEW;

import SolucaoSistemasDAO.ConectaBanco;
import java.awt.HeadlessException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Batman
 */
public class PeriodoVIEW extends javax.swing.JDialog {

    /**
     * Creates new form PeriodoVIEW
     */
    public PeriodoVIEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("PERÍODO");
        this.setLocationRelativeTo(null);
        UtilVIEW.Icone(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDataInicial = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDataFinal = new com.toedter.calendar.JDateChooser();
        btnVisualizar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(txtDataInicial);
        txtDataInicial.setBounds(10, 30, 100, 20);

        jLabel1.setText("Data Inicial:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 120, 14);

        jLabel2.setText("Data Final:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(120, 10, 150, 14);
        getContentPane().add(txtDataFinal);
        txtDataFinal.setBounds(120, 30, 100, 20);

        btnVisualizar.setText("Visualizar");
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVisualizar);
        btnVisualizar.setBounds(10, 60, 100, 23);

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(120, 60, 100, 23);

        setBounds(0, 0, 244, 134);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        try {
            int sair = -1;
            sair = JOptionPane.showConfirmDialog(null, "Deseja sair?", "MENSAGEM",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (sair == 0) {
                PrincipalVIEW.relCaixa = false;
                PrincipalVIEW.relBalanco = false;
                PrincipalVIEW.relDespesa = false;
                PrincipalVIEW.relReceita = false;
                PrincipalVIEW.vendas = false;
                PrincipalVIEW.produtosMais = false;
                this.dispose();
            } else if (sair == 1) {

            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed
        try {
            if(PrincipalVIEW.tabelaVacinas == true){
                this.dispose();
            UtilVIEW objutilVIEW = new UtilVIEW();
            objutilVIEW.ImprimirVacinas(new SimpleDateFormat("yyyy-MM-dd").format(txtDataInicial.getDate()), 
                    new SimpleDateFormat("yyyy-MM-dd").format(txtDataFinal.getDate()),
                    new SimpleDateFormat("dd/MM/yyyy").format(txtDataInicial.getDate()), 
                    new SimpleDateFormat("dd/MM/yyyy").format(txtDataFinal.getDate()));
        }else if(PrincipalVIEW.tabelaVacinas == false){
            ImprimirCaixa();
        }
            PrincipalVIEW.tabelaVacinas = false;
        } catch (NullPointerException e) {
            System.out.println(String.valueOf(e.getMessage()));
            JOptionPane.showMessageDialog(null, "ERRO "+e.getMessage());
        }

        
        
    }//GEN-LAST:event_btnVisualizarActionPerformed

    private void ImprimirCaixa() {
        try {
            if (txtDataInicial.getDate() == null || txtDataFinal.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Informar as datas!", "ATENÇÃO",
                        JOptionPane.WARNING_MESSAGE);
            } else {

                int op = -1;
                op = JOptionPane.showConfirmDialog(null, "Impressora esta ligada?", "PERGUNTA",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (op == 0) {
                    this.dispose();
                    URL arquivo = null;
                    if (PrincipalVIEW.relCaixa == true) {
                        arquivo = getClass().getResource("/Relatorios/MovimentacaoCaixa.jasper");
                    } else if (PrincipalVIEW.relDespesa == true) {
                        arquivo = getClass().getResource("/Relatorios/AnaliticoDespesa.jasper");
                    } else if (PrincipalVIEW.relReceita == true) {
                        arquivo = getClass().getResource("/Relatorios/AnaliticoReceita.jasper");
                    } else if (PrincipalVIEW.relBalanco == true) {
                        arquivo = getClass().getResource("/Relatorios/BalancoFinanceiro.jasper");
                    } else if(PrincipalVIEW.estoqueBaixo == true){
                        arquivo = getClass().getResource("/Relatorios/estoqueCategoria.jasper");
                    }else if(PrincipalVIEW.estoqueNormal == true){
                        arquivo = getClass().getResource("/Relatorios/estoqueNormal.jasper");
                    }else if(PrincipalVIEW.tabelaVacinas == true){
                        arquivo = getClass().getResource("/Relatorios/TabelaVacinas.jasper");
                    }else if(PrincipalVIEW.vendas == true){
                        arquivo = getClass().getResource("/Relatorios/Vendas.jasper");
                    }else if(PrincipalVIEW.produtosMais == true){
                        arquivo = getClass().getResource("/Relatorios/ProdutosMais.jasper");
                    }

                    //JOptionPane.showMessageDialog(this, arquivo.toString());
                    if (arquivo == null) {
                        System.out.println("ARQUIVO INEXISTENTE");
                        JOptionPane.showMessageDialog(null, "ARQUIVO INEXISTENTE ");
                    } else {

                        ConectaBanco.ConectaPostgres();
                        JasperPrint rel = null;                       
                        Map parametros = new HashMap();
                        if (PrincipalVIEW.relCaixa == false) {
                            parametros.put("dataBR1", new SimpleDateFormat("dd/MM/yyyy").format(txtDataInicial.getDate()));
                            parametros.put("dataBR2", new SimpleDateFormat("dd/MM/yyyy").format(txtDataFinal.getDate()));

                        }
                        parametros.put("dataInicial", new SimpleDateFormat("yyyy-MM-dd").format(txtDataInicial.getDate()));
                        parametros.put("dataFinal", new SimpleDateFormat("yyyy-MM-dd").format(txtDataFinal.getDate()));
                        parametros.put("$P!{SUBREPORT_DIR}", "D:\\SolucaoSistemas\\src\\Relatorios\\CaixaDetalhado.jasper");
                       
                        JasperReport jr;
                        try {
                            jr = (JasperReport) JRLoader.loadObject(arquivo);
                            rel = JasperFillManager.fillReport(jr, parametros, ConectaBanco.con);
                            JasperViewer.viewReport(rel, false);
                        } catch (JRException ex) {
                            System.out.println("" + ex.getMessage());
                            JOptionPane.showMessageDialog(null, "ERRO "+ex.getMessage());
                        }

                    }
                    PrincipalVIEW.relCaixa = false;
                    PrincipalVIEW.relBalanco = false;
                    PrincipalVIEW.relDespesa = false;
                    PrincipalVIEW.relReceita = false;
                    PrincipalVIEW.estoqueBaixo = false;
                    PrincipalVIEW.estoqueNormal = false;
                    PrincipalVIEW.vendas = false;
                    PrincipalVIEW.produtosMais = false;
                } else if (op == 1) {

                }

            }
        } catch (HeadlessException | NumberFormatException e) {
            System.out.println("" + e.getMessage());
            JOptionPane.showMessageDialog(null, "ERRO 2"+e.getMessage());
        }

    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PeriodoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PeriodoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PeriodoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PeriodoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                PeriodoVIEW dialog = new PeriodoVIEW(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnVisualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private com.toedter.calendar.JDateChooser txtDataFinal;
    private com.toedter.calendar.JDateChooser txtDataInicial;
    // End of variables declaration//GEN-END:variables
}
